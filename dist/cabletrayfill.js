!function(){"use strict";window.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".workflow-grid .workflow-card").forEach(e=>{const t=e.dataset.storageKey,n=e.querySelector(".status");if(!n)return;let r=!1;"racewaySchedule"===t?r=["ductbankSchedule","traySchedule","conduitSchedule"].some(e=>localStorage.getItem(e)):"optimalRoute"===t?r=["cableSchedule","traySchedule"].every(e=>localStorage.getItem(e)):t&&(r=!!localStorage.getItem(t)),r?(e.classList.add("complete"),n.textContent="✓",n.setAttribute("aria-label","Completed")):n.textContent="Incomplete"})}),function(e){const t=.3048;let n="imperial";function r(){if(e.getProject)try{return e.getProject().settings?.units||"imperial"}catch{return"imperial"}return n}function o(e){return"imperial"===r()?e:e*t}function l(e){return"imperial"===r()?e:25.4*e}function i(){return"imperial"===r()?"ft":"m"}function a(){return"imperial"===r()?"in":"mm"}const c={getUnitSystem:r,setUnitSystem:function(t){const r="metric"===t?"metric":"imperial";if(e.getProject&&e.setProject)try{const t=e.getProject();t.settings=t.settings||{},t.settings.units=r,e.setProject(t)}catch{}n=r},distanceToDisplay:o,distanceFromInput:function(e){return"imperial"===r()?e:e/t},conduitToDisplay:l,conduitFromInput:function(e){return"imperial"===r()?e:e/25.4},distanceLabel:i,conduitLabel:a,formatDistance:function(e,t=2){return`${o(e).toFixed(t)} ${i()}`},formatConduitSize:function(e,t=2){return`${l(e).toFixed(t)} ${a()}`}};"undefined"!=typeof module&&module.exports&&(module.exports=c),e.units=c}("undefined"!=typeof globalThis?globalThis:window);const e="a[href],button:not([disabled]),textarea:not([disabled]),input:not([disabled]),select:not([disabled]),[tabindex]:not([tabindex='-1'])",t="CTR_PROJECT_V1";function n(e={}){const t=e.settings||{session:e.session||e.ctrSession||{},collapsedGroups:e.collapsedGroups||{}};return t.units||(t.units="imperial"),{name:e.name||"",ductbanks:e.ductbanks||e.ductbankSchedule||[],conduits:e.conduits||e.conduitSchedule||[],trays:e.trays||e.traySchedule||[],cables:e.cables||e.cableSchedule||[],settings:t}}function r(e){if(Array.isArray(e))return e.map(r);if(e&&"object"==typeof e){const t={};return Object.keys(e).sort().forEach(n=>{t[n]=r(e[n])}),t}return e}function o(e){return JSON.stringify(r(e))}async function l(e){const t=o(e),n=await async function(e){try{const t=new CompressionStream("gzip"),n=t.writable.getWriter();await n.write((new TextEncoder).encode(e)),await n.close();const r=await new Response(t.readable).arrayBuffer();return new Uint8Array(r)}catch{return(new TextEncoder).encode(e)}}(t);return encodeURIComponent(function(e){let t="";for(const n of e)t+=String.fromCharCode(n);return btoa(t)}(n))}async function i(e){const t=function(e){const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;e++)n[e]=t.charCodeAt(e);return n}(decodeURIComponent(e)),n=await async function(e){try{const t=new DecompressionStream("gzip"),n=t.writable.getWriter();await n.write(e),await n.close();const r=await new Response(t.readable).arrayBuffer();return(new TextDecoder).decode(r)}catch{return(new TextDecoder).decode(e)}}(t);return JSON.parse(n)}async function a(){if("function"!=typeof getProject)return;const e=getProject(),t=e.name||"Untitled";try{const n=await async function(e){const t=(new TextEncoder).encode(e),n=crypto.subtle||crypto.webcrypto?.subtle,r=await n.digest("SHA-256",t);return Array.from(new Uint8Array(r)).map(e=>e.toString(16).padStart(2,"0")).join("")}(o(e));let r=document.getElementById("project-display");if(!r){const e=document.querySelector(".top-nav .nav-links"),t=document.getElementById("settings-btn");e&&(r=document.createElement("span"),r.id="project-display",r.style.marginLeft="auto",r.style.marginRight="1rem",e.insertBefore(r,t),t&&(t.style.marginLeft="0"))}r&&(r.textContent=`Project: ${t} (hash: ${n.slice(0,8)})`)}catch(e){console.error("hash failed",e)}}async function c(){try{const e=getProject?getProject():{name:"",ductbanks:[],conduits:[],trays:[],cables:[],settings:{session:{},collapsedGroups:{},units:"imperial"}},t=o(e),n=await l(e),r=`${location.origin}${location.pathname}#project=${n}`;if(r.length<2e3)await navigator.clipboard.writeText(r),alert("Share link copied to clipboard");else{const e=new Blob([t],{type:"application/json"}),n=document.createElement("a");n.href=URL.createObjectURL(e),n.download="project.ctr.json",n.click(),setTimeout(()=>URL.revokeObjectURL(n.href),0),alert("Project too large for link; downloaded instead")}}catch(e){console.error("share link failed",e)}}globalThis.migrateProject=n,function(){if("undefined"==typeof localStorage)return;const e=localStorage.getItem.bind(localStorage),r=localStorage.setItem.bind(localStorage),o=localStorage.removeItem.bind(localStorage);let l;try{l=JSON.parse(e(t))}catch{l=null}if(!l||"object"!=typeof l){const o={cables:JSON.parse(e("cableSchedule")||"[]"),trays:JSON.parse(e("traySchedule")||"[]"),conduits:JSON.parse(e("conduitSchedule")||"[]"),ductbanks:JSON.parse(e("ductbankSchedule")||"[]"),settings:{session:JSON.parse(e("ctrSession")||"{}"),collapsedGroups:JSON.parse(e("collapsedGroups")||"{}"),conduitFillData:JSON.parse(e("conduitFillData")||"null"),trayFillData:JSON.parse(e("trayFillData")||"null"),ductbankSession:JSON.parse(e("ductbankSession")||"{}")}};l=n(o),r(t,JSON.stringify(l))}function i(){r(t,JSON.stringify(l)),globalThis.updateProjectDisplay?.()}localStorage.getItem=function(n){if(n===t)return e(n);switch(n){case"cableSchedule":return JSON.stringify(l.cables||[]);case"traySchedule":return JSON.stringify(l.trays||[]);case"conduitSchedule":return JSON.stringify(l.conduits||[]);case"ductbankSchedule":return JSON.stringify(l.ductbanks||[]);case"collapsedGroups":return JSON.stringify(l.settings?.collapsedGroups||{});case"ctrSession":return JSON.stringify(l.settings?.session||{});default:return l.settings&&n in l.settings?JSON.stringify(l.settings[n]):null}},localStorage.setItem=function(e,n){if(e!==t){switch(e){case"cableSchedule":l.cables=JSON.parse(n);break;case"traySchedule":l.trays=JSON.parse(n);break;case"conduitSchedule":l.conduits=JSON.parse(n);break;case"ductbankSchedule":l.ductbanks=JSON.parse(n);break;case"collapsedGroups":l.settings.collapsedGroups=JSON.parse(n);break;case"ctrSession":l.settings.session=JSON.parse(n);break;default:l.settings||(l.settings={});try{l.settings[e]=JSON.parse(n)}catch{l.settings[e]=n}}i()}else r(e,n)},localStorage.removeItem=function(e){if(e!==t){switch(e){case"cableSchedule":l.cables=[];break;case"traySchedule":l.trays=[];break;case"conduitSchedule":l.conduits=[];break;case"ductbankSchedule":l.ductbanks=[];break;case"collapsedGroups":delete l.settings.collapsedGroups;break;case"ctrSession":delete l.settings.session;break;default:l.settings&&delete l.settings[e]}i()}else o(e)},globalThis.getProject=()=>JSON.parse(JSON.stringify(l)),globalThis.setProject=e=>{l=n(e),i()}}(),globalThis.updateProjectDisplay=a;const s="CTR_HISTORY";let d=[],u=-1;function p(){try{localStorage.setItem(s,JSON.stringify(d))}catch(e){console.error("history save failed",e)}}function h(e,t){const n={};return new Set([...Object.keys(e||{}),...Object.keys(t||{})]).forEach(r=>{const o=e?e[r]:void 0,l=t?t[r]:void 0;if("object"==typeof o&&o&&"object"==typeof l&&l){const e=h(o,l);Object.keys(e).length&&(n[r]=e)}else JSON.stringify(o)!==JSON.stringify(l)&&(n[r]={old:o,new:l})}),n}function m(){if("function"!=typeof getProject)return;const e=getProject(),t=d[d.length-1];t&&JSON.stringify(t.project)===JSON.stringify(e)||(u<d.length-1&&(d=d.slice(0,u+1)),d.push({ts:Date.now(),project:e}),d.length>20&&(d.shift(),u>0&&u--),u=d.length-1,p(),b())}function y(e){const t=d[e];if(!t)return;const n=h(getProject(),t.project),r=new Date(t.ts).toLocaleString(),o=JSON.stringify(n,null,2);confirm(`Restore snapshot from ${r}?\n\nChanges:\n${o}`)&&(setProject(t.project),u=e,p(),location.reload())}function g(){u>0&&y(u-1)}function f(){u<d.length-1&&y(u+1)}function b(){const e=document.querySelectorAll(".ctr-undo-btn"),t=document.querySelectorAll(".ctr-redo-btn");e.forEach(e=>e.disabled=u<=0),t.forEach(e=>e.disabled=u>=d.length-1)}function x(){"undefined"!=typeof window&&"undefined"!=typeof localStorage&&(!function(){try{d=JSON.parse(localStorage.getItem(s))||[]}catch{d=[]}u=d.length-1}(),d.length||m(),document.querySelectorAll('button[id^="save"]').forEach(e=>{if(e.dataset.historyAttached)return;e.dataset.historyAttached="1";const t=document.createElement("button");t.type="button",t.textContent="Undo",t.className="ctr-undo-btn";const n=document.createElement("button");n.type="button",n.textContent="Redo",n.className="ctr-redo-btn",e.insertAdjacentElement("afterend",n),e.insertAdjacentElement("afterend",t),t.addEventListener("click",g),n.addEventListener("click",f)}),b(),setInterval(m,2e4),window.addEventListener("blur",m),document.addEventListener("keydown",e=>{(e.ctrlKey||e.metaKey)&&"z"===e.key.toLowerCase()&&(e.preventDefault(),g()),(e.ctrlKey||e.metaKey)&&"y"===e.key.toLowerCase()&&(e.preventDefault(),f())}))}function S(t,n){if("Tab"!==t.key)return;const r=n.querySelectorAll(e);if(!r.length)return;const o=r[0],l=r[r.length-1];t.shiftKey&&document.activeElement===o?(t.preventDefault(),l.focus()):t.shiftKey||document.activeElement!==l||(t.preventDefault(),o.focus())}const v="CTR_CONDUITS";function E(){const e=globalThis.units?.getUnitSystem()?globalThis.units.getUnitSystem():"imperial",t="imperial"===e?"ft":"m",n="imperial"===e?"in":"mm";document.querySelectorAll('[data-unit="distance"]').forEach(e=>e.textContent=t),document.querySelectorAll('[data-unit="conduit"]').forEach(e=>e.textContent=n)}globalThis.document?.addEventListener("DOMContentLoaded",function(){document.addEventListener("keydown",e=>{if("ArrowUp"!==e.key&&"ArrowDown"!==e.key)return;const t=e.target;if(!["INPUT","SELECT","TEXTAREA"].includes(t.tagName))return;const n=t.closest("td");if(!n||!n.closest("table"))return;const r=n.parentElement,o=n.cellIndex,l="ArrowUp"===e.key?r.previousElementSibling:r.nextElementSibling;if(!l)return;const i=l.cells[o];if(!i)return;const a=i.querySelector("input, select, textarea");a&&(e.preventDefault(),a.focus(),"function"==typeof a.select&&a.select())})}),globalThis.addEventListener?.("DOMContentLoaded",function(){!async function(){if(location.hash.startsWith("#project="))try{const e=location.hash.slice(9),t=await i(e);globalThis.setProject&&globalThis.setProject(t),location.hash="",location.reload()}catch(e){console.error("load share failed",e)}}();const e=document.getElementById("export-project-btn"),t=document.getElementById("import-project-btn"),n=document.getElementById("import-project-input");e&&e.addEventListener("click",()=>{try{const e=globalThis.getProject?globalThis.getProject():{name:"",ductbanks:[],conduits:[],trays:[],cables:[],settings:{session:{},collapsedGroups:{},units:"imperial"}},t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),n=document.createElement("a");n.href=URL.createObjectURL(t),n.download="project.ctr.json",n.click(),setTimeout(()=>URL.revokeObjectURL(n.href),0)}catch(e){console.error("Export failed",e)}}),t&&n&&(t.addEventListener("click",()=>n.click()),n.addEventListener("change",e=>{const t=e.target.files[0];if(!t)return;const r=new FileReader;r.onload=e=>{try{const t=JSON.parse(e.target.result);globalThis.setProject&&globalThis.setProject(t),location.reload()}catch(e){console.error("Import failed",e)}},r.readAsText(t),n.value=""}))}),globalThis.initSettings=function(){const n=document.getElementById("settings-btn"),r=document.getElementById("settings-menu");if(n&&r){r.setAttribute("role","dialog"),r.setAttribute("aria-modal","true"),r.setAttribute("aria-hidden","true");let t=!1;const o=e=>{"Escape"===e.key?i():S(e,r)},l=()=>{t=!0,r.style.display="flex",r.setAttribute("aria-hidden","false"),n.setAttribute("aria-expanded","true"),document.addEventListener("keydown",o);const l=r.querySelectorAll(e);l.length&&l[0].focus()},i=()=>{t&&(t=!1,r.style.display="none",r.setAttribute("aria-hidden","true"),n.setAttribute("aria-expanded","false"),document.removeEventListener("keydown",o),n.focus())};n.addEventListener("click",()=>{t?i():l()}),document.addEventListener("click",e=>{t&&!r.contains(e.target)&&e.target!==n&&i()});const s=document.createElement("label");s.textContent="Project Name";const d=document.createElement("input");d.type="text",d.id="project-name-input";try{d.value=getProject().name||""}catch{}s.appendChild(d),r.insertBefore(s,r.firstChild),d.addEventListener("input",e=>{try{const t=getProject();t.name=e.target.value,setProject(t),a()}catch{}});const u=document.getElementById("export-project-btn"),p=document.createElement("button");p.id="copy-share-link-btn",p.textContent="Copy Share Link",u?u.insertAdjacentElement("beforebegin",p):r.appendChild(p),p.addEventListener("click",c)}const o=document.getElementById("unit-select");if(o){try{o.value=getProject().settings?.units||"imperial"}catch{}o.addEventListener("change",e=>{try{const t=getProject();t.settings=t.settings||{},t.settings.units=e.target.value,setProject(t)}catch{}E()})}E(),a(),window.addEventListener("storage",e=>{e.key===t&&a()}),globalThis.__ctrHistoryInit||(x(),globalThis.__ctrHistoryInit=!0)},globalThis.initDarkMode=function(){const e=document.getElementById("dark-toggle"),t=JSON.parse(localStorage.getItem("ctrSession")||"{}");if(void 0===t.darkMode){const e=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches;t.darkMode=e,localStorage.setItem("ctrSession",JSON.stringify(t))}document.body.classList.toggle("dark-mode",t.darkMode),e&&(e.checked=!!t.darkMode),e&&e.addEventListener("change",()=>{document.body.classList.toggle("dark-mode",e.checked),t.darkMode=e.checked,localStorage.setItem("ctrSession",JSON.stringify(t)),"function"==typeof window.saveSession&&window.saveSession(),"function"==typeof window.saveDuctbankSession&&window.saveDuctbankSession()}),window.addEventListener("storage",t=>{if("ctrSession"===t.key)try{const n=JSON.parse(t.newValue);document.body.classList.toggle("dark-mode",n&&n.darkMode),e&&(e.checked=!(!n||!n.darkMode))}catch{}})},globalThis.initHelpModal=function(t="help-btn",n="help-modal",r){const o=document.getElementById(t),l=document.getElementById(n),i=r?document.getElementById(r):l?l.querySelector(".close-btn"):null;if(o&&l&&i){l.setAttribute("role","dialog"),l.setAttribute("aria-modal","true"),l.setAttribute("aria-hidden","true");const t=e=>{"Escape"===e.key?r():S(e,l)},n=()=>{l.style.display="flex",l.setAttribute("aria-hidden","false"),o.setAttribute("aria-expanded","true"),document.addEventListener("keydown",t);const n=l.querySelectorAll(e);n.length&&n[0].focus()},r=()=>{l.style.display="none",l.setAttribute("aria-hidden","true"),o.setAttribute("aria-expanded","false"),document.removeEventListener("keydown",t),o.focus()};o.addEventListener("click",n),i.addEventListener("click",r),l.addEventListener("click",e=>{e.target===l&&r()})}},globalThis.initNavToggle=function(){const e=document.querySelector(".top-nav");if(!e)return;const t=e.querySelector(".nav-toggle");t&&t.addEventListener("click",()=>{e.classList.toggle("open")})},globalThis.checkPrereqs=function(e=[]){},globalThis.persistConduits=function(e){try{localStorage.setItem(v,JSON.stringify(e))}catch(e){console.error("Failed to persist conduits",e)}},globalThis.loadConduits=function(){try{const e=localStorage.getItem(v);if(e){const t=JSON.parse(e);return{ductbanks:t.ductbanks||[],conduits:t.conduits||[]}}}catch(e){}const e=globalThis.TableUtils?.STORAGE_KEYS?.ductbankSchedule||"ductbankSchedule",t=globalThis.TableUtils?.STORAGE_KEYS?.conduitSchedule||"conduitSchedule";let n=[],r=[];try{n=JSON.parse(localStorage.getItem(e)||"[]")}catch(e){}try{r=JSON.parse(localStorage.getItem(t)||"[]")}catch(e){}const o=[];return n=n.map(e=>{(e.conduits||[]).forEach(t=>{o.push({ductbankTag:e.tag,conduit_id:t.conduit_id,tray_id:`${e.tag}-${t.conduit_id}`,type:t.type,trade_size:t.trade_size,start_x:t.start_x,start_y:t.start_y,start_z:t.start_z,end_x:t.end_x,end_y:t.end_y,end_z:t.end_z,allowed_cable_group:t.allowed_cable_group})});const{conduits:t,...n}=e;return n}),{ductbanks:n,conduits:[...o,...r]}},globalThis.applyUnitLabels=E,checkPrereqs([{key:"traySchedule",page:"racewayschedule.html",label:"Raceway Schedule"}]),document.addEventListener("DOMContentLoaded",function(){initSettings(),initDarkMode(),initHelpModal("help-btn","helpOverlay","helpClose"),initNavToggle();const e=createDirtyTracker(),t=()=>{e.markClean()},n=()=>{e.markDirty()},r=[{label:"3/C – #8 AWG",conductors:3,size:"#8 AWG",OD:.66,weight:.33},{label:"3/C – #6 AWG",conductors:3,size:"#6 AWG",OD:.74,weight:.45},{label:"3/C – #4 AWG",conductors:3,size:"#4 AWG",OD:.88,weight:.66},{label:"3/C – #2 AWG",conductors:3,size:"#2 AWG",OD:1,weight:.96},{label:"3/C – #1 AWG",conductors:3,size:"#1 AWG",OD:1.13,weight:1.17},{label:"3/C – 1/0 AWG",conductors:3,size:"1/0 AWG",OD:1.22,weight:1.43},{label:"3/C – 2/0 AWG",conductors:3,size:"2/0 AWG",OD:1.31,weight:1.72},{label:"3/C – 3/0 AWG",conductors:3,size:"3/0 AWG",OD:1.42,weight:2.14},{label:"3/C – 4/0 AWG",conductors:3,size:"4/0 AWG",OD:1.55,weight:2.64},{label:"3/C – 250 kcmil",conductors:3,size:"250 kcmil",OD:1.76,weight:3.18},{label:"3/C – 350 kcmil",conductors:3,size:"350 kcmil",OD:1.98,weight:4.29},{label:"3/C – 500 kcmil",conductors:3,size:"500 kcmil",OD:2.26,weight:5.94},{label:"3/C – 750 kcmil",conductors:3,size:"750 kcmil",OD:2.71,weight:9.01},{label:"3/C – 1000 kcmil",conductors:3,size:"1000 kcmil",OD:3.1,weight:11.7}],o=document.getElementById("sizeList");["#22 AWG","#20 AWG","#18 AWG","#16 AWG","#14 AWG","#12 AWG","#10 AWG","#8 AWG","#6 AWG","#4 AWG","#2 AWG","#1 AWG","1/0 AWG","2/0 AWG","3/0 AWG","4/0 AWG","250 kcmil","350 kcmil","500 kcmil","750 kcmil","1000 kcmil"].forEach(e=>{const t=document.createElement("option");t.value=e,o.appendChild(t)});let l=null,i=[],a=0,c=0,s=20,d=[];const u=document.querySelector("#cableTable tbody"),p=document.getElementById("cableTable").querySelectorAll("thead th"),h=[],m=[];function y(){Array.from(u.rows).forEach(e=>{let t=!0;h.forEach((n,r)=>{if(!t)return;const o=e.cells[r];if(!o)return;const l=o.querySelector("input, select"),i=l?String(l.value).toLowerCase():"";n&&!i.includes(n)&&(t=!1)}),e.style.display=t?"":"none"})}p.forEach((e,t)=>{if(t<p.length-2){const n=document.createElement("button");n.className="filter-btn",n.innerHTML="▼",n.addEventListener("click",e=>{e.stopPropagation(),function(e,t){document.querySelectorAll(".filter-popup").forEach(e=>e.remove());const n=document.createElement("div");n.className="filter-popup";const r=document.createElement("input");r.type="text",r.value=h[t],n.appendChild(r);const o=document.createElement("button");o.textContent="Apply",o.addEventListener("click",()=>{h[t]=r.value.trim().toLowerCase(),h[t]?e.classList.add("filtered"):e.classList.remove("filtered"),y(),n.remove()}),n.appendChild(o);const l=document.createElement("button");l.textContent="Clear",l.addEventListener("click",()=>{r.value="",h[t]="",e.classList.remove("filtered"),y(),n.remove()}),n.appendChild(l);const i=e.getBoundingClientRect();n.style.top=i.bottom+window.scrollY+"px",n.style.left=i.left+window.scrollX+"px",document.body.appendChild(n);const a=e=>{n.contains(e.target)||(n.remove(),document.removeEventListener("click",a))};setTimeout(()=>document.addEventListener("click",a),0)}(n,t)}),e.appendChild(n),h[t]="",m[t]=n}});const g=document.getElementById("clearCableFiltersBtn");function f(){const e=document.createElement("tr"),t=document.createElement("td"),n=document.createElement("input");n.type="text",n.placeholder="e.g. P-20MP007-01",n.required=!0,n.style.width="120px",t.appendChild(n),e.appendChild(t);const o=document.createElement("td"),l=document.createElement("select");l.style.width="120px";const i=document.createElement("option");i.value="",i.textContent="-- select --",l.appendChild(i),["Power","Control","Signal"].forEach(e=>{const t=document.createElement("option");t.value=e,t.textContent=e,l.appendChild(t)}),o.appendChild(l),e.appendChild(o);const a=document.createElement("td"),c=document.createElement("input");c.type="number",c.step="1",c.min="1",c.style.width="60px",a.appendChild(c),e.appendChild(a);const s=document.createElement("td"),d=document.createElement("input");d.type="text",d.setAttribute("list","sizeList"),d.placeholder="e.g. #1 AWG",d.style.width="100px",s.appendChild(d),e.appendChild(s);const p=document.createElement("td"),h=document.createElement("input");h.type="number",h.step="1",h.style.width="80px",p.appendChild(h),e.appendChild(p);const m=document.createElement("td"),g=document.createElement("input");g.type="number",g.step="1",g.style.width="80px",m.appendChild(g),e.appendChild(m);const b=document.createElement("td"),x=document.createElement("input");x.type="number",x.placeholder="0.00",x.step="0.01",x.style.width="60px",x.readOnly=!0,b.appendChild(x),e.appendChild(b);const S=document.createElement("td"),v=document.createElement("input");v.type="number",v.placeholder="0.00",v.step="0.01",v.style.width="60px",v.readOnly=!0,S.appendChild(v),e.appendChild(S);const E=document.createElement("td"),w=document.createElement("input");w.type="number",w.step="1",w.min="1",w.style.width="50px",w.value="1",E.appendChild(w),e.appendChild(E);const k=document.createElement("td"),C=document.createElement("input");C.type="number",C.step="1",C.min="1",C.style.width="50px",C.value="",k.appendChild(C),e.appendChild(k);const $=document.createElement("td"),O=document.createElement("button");O.type="button",O.textContent="⧉",O.className="duplicateBtn",O.addEventListener("click",()=>{const t=f();t.children[0].querySelector("input").value=n.value,t.children[1].querySelector("select").value=l.value,t.children[2].querySelector("input").value=c.value;const r=t.children[3].querySelector("input");r.value=d.value,r.dispatchEvent(new Event("input"));const o=t.children[4].querySelector("input"),i=t.children[5].querySelector("input"),a=t.children[6].querySelector("input"),s=t.children[7].querySelector("input"),p=t.children[8].querySelector("input"),m=t.children[9].querySelector("input");o.value=h.value,i.value=g.value,a.value=x.value,s.value=v.value,p.value=w.value,m.value=C.value,a.readOnly=x.readOnly,s.readOnly=v.readOnly,u.insertBefore(t,e.nextSibling),y()}),$.appendChild(O),e.appendChild($);const A=document.createElement("td"),I=document.createElement("button");function F(){const e=parseInt(c.value),t=d.value.trim(),n=r.findIndex(n=>n.conductors===e&&n.size===t);n>=0?(x.value=r[n].OD.toFixed(2),v.value=r[n].weight.toFixed(2),x.readOnly=!0,v.readOnly=!0):(x.value="",v.value="",x.readOnly=!1,v.readOnly=!1)}return I.type="button",I.textContent="✖",I.className="removeBtn",I.addEventListener("click",()=>{u.removeChild(e),y()}),A.appendChild(I),e.appendChild(A),c.addEventListener("input",F),d.addEventListener("input",F),e}g&&g.addEventListener("click",function(){h.forEach((e,t)=>{h[t]="",m[t]&&m[t].classList.remove("filtered")}),y()}),document.getElementById("addCableBtn").addEventListener("click",()=>{u.appendChild(f()),y()}),document.getElementById("addCableBtn").click();const b={6:7,9:10.5,12:14,18:21,24:28,30:32.5,36:39},x=[6,9,12,18,24,30,36],S={6:7,9:10.5,12:14,18:21,24:28,30:32.5,36:39},v={6:5.5,9:8,12:11,18:16.5,24:22,30:27.5,36:33};function E(e){const t=[],n=[],r=$("1/0 AWG"),o=$("4/0 AWG");return e.forEach(e=>{const l=$(e.size);e.isGroup||e.OD>=1.55||1===e.count&&l>=r&&l<=o?t.push(e):n.push(e)}),{large:t,small:n}}function w(e){return e.reduce((e,t)=>e+t.OD,0)}function k(e){return e.reduce((e,t)=>e+Math.PI*(t.OD/2)**2,0)}function C(e,t){const n=b[e]||0;return"solid"===t?.78*n:n}function $(e){if(!e)return-1/0;const t=e.trim().toUpperCase();if(t.endsWith("KCMIL"))return 2e3+parseFloat(t);const n=t.match(/(\d+)\/0\s*AWG/);if(n)return 1e3+parseInt(n[1]);const r=t.match(/#(\d+)\s*AWG/);return r?-parseInt(r[1]):NaN}function O(e,t){const n=e.slice().sort((e,t)=>t.OD-e.OD),r=[];return n.forEach((e,n)=>{const o=e.OD/2;let l;if(0===n)l=o;else{const i=r[n-1];if(t){const t=i.spacingGap||2*i.r,n=e.spacingGap||2*o,r=Math.max(t,n);l=i.x+i.r+r+o}else l=i.x+i.r+o}const i=Object.assign({},e,{x:l,y:o,r:o});r.push(i)}),r}function A(e,t,n,r){const o=r.map(e=>({x:e.x,y:e.y,r:e.r,OD:e.OD,tag:e.tag,cableType:e.cableType,count:e.count,size:e.size,weight:e.weight})),l=e.slice().sort((e,t)=>t.OD-e.OD),i=1e-6;return l.forEach(e=>{const r=e.OD/2;let l={x:null,y:1/0};const a=[];a.push({x:n+r,y:r}),o.forEach(e=>{const o=e.x-(e.r+r),l=e.x+(e.r+r);o>=n+r-i&&o<=t-r+i&&a.push({x:o,y:r}),l>=n+r-i&&l<=t-r+i&&a.push({x:l,y:r})});for(let e=0;e<o.length;e++){const l=o[e],c=l.r+r;for(let s=e+1;s<o.length;s++){const e=o[s],d=e.r+r,u=e.x-l.x,p=e.y-l.y,h=u*u+p*p,m=Math.sqrt(h);if(m<i||m>c+d-i||m<Math.abs(c-d)+i)continue;const y=(c*c-d*d+h)/(2*m),g=c*c-y*y;if(g<-i)continue;const f=Math.sqrt(Math.max(0,g)),b=l.x+y*u/m,x=l.y+y*p/m,S=f/m*-p,v=u*(f/m);[{x:b+S,y:x+v},{x:b-S,y:x-v}].forEach(({x:e,y:o})=>{e>=n+r-i&&e<=t-r+i&&o>=r-i&&a.push({x:e,y:o})})}}if(o.forEach(e=>{const t=n+r,o=Math.abs(t-e.x),l=e.r+r;if(o<l-i){const n=Math.sqrt(Math.max(0,l*l-o*o)),c=e.y+n;c>=r-i&&a.push({x:t,y:c})}}),a.forEach(e=>{const a=e.x,c=e.y;if(a-r<n-i||a+r>t+i)return;if(c-r<-i)return;let s=!1;for(const e of o){const t=a-e.x,n=c-e.y,o=e.r+r;if(t*t+n*n<(o-i)*(o-i)){s=!0;break}}s||(c<l.y-i||Math.abs(c-l.y)<i&&a<l.x)&&(l={x:a,y:c})}),null===l.x){const e=n+r;let t=r;o.forEach(n=>{if(Math.abs(e-n.x)<n.r+r-i){const e=n.y+n.r+r;e>t&&(t=e)}}),l={x:e,y:t}}o.push({x:l.x,y:l.y,r:r,OD:e.OD,tag:e.tag,cableType:e.cableType,count:e.count,size:e.size,weight:e.weight})}),o}function I(e,t,n){const{large:r,small:o}=E(e);let l=[];r.length>0&&(l=O(r,n));let i=0;l.length>0&&(i=Math.max(...l.map(e=>e.x+e.r)));let a=l;o.length>0&&(a=A(o,t,i,l));const c=l.concat(a.slice(l.length)),s=c.length>0?Math.max(...c.map(e=>e.x+e.r)):0;return{placed:c,widthUsed:s,barrierX:i,largeCount:r.length,smallCount:o.length}}function I(e,t,n){const{large:r,small:o}=E(e);let l=[];r.length>0&&(l=O(r,n));let i=0;l.length>0&&(i=Math.max(...l.map(e=>e.x+e.r)));let a=l;o.length>0&&(a=A(o,t,i,l));const c=l.concat(a.slice(l.length)),s=c.length>0?Math.max(...c.map(e=>e.x+e.r)):0;return{placed:c,widthUsed:s,barrierX:i,largeCount:r.length,smallCount:o.length}}document.getElementById("drawBtn").addEventListener("click",()=>{const e=parseFloat(document.getElementById("trayWidth").value),t=parseFloat(document.getElementById("trayDepth").value),n=document.getElementById("trayType").value,r=document.getElementById("trayName").value.trim(),o=Array.from(u.querySelectorAll("tr")),p=[];for(const e of o){const t=e.children[0].querySelector("input").value.trim(),n=e.children[1].querySelector("select").value,r=parseInt(e.children[2].querySelector("input").value),o=e.children[3].querySelector("input").value.trim(),l=parseFloat(e.children[4].querySelector("input").value),i=parseFloat(e.children[5].querySelector("input").value),a=parseFloat(e.children[6].querySelector("input").value),c=parseFloat(e.children[7].querySelector("input").value),s=parseInt(e.children[8].querySelector("input").value)||1,d=e.children[9].querySelector("input").value,u=d?parseInt(d):null,h=r>1;if(!t)return void alert("ERROR: Every cable row requires a Tag.");if(!n)return void alert("ERROR: Every cable row requires a Cable Type.");if(!r||!o)return void alert("ERROR: Every cable row requires Conductor count and size.");if(isNaN(a)||isNaN(c))return void alert("ERROR: Every cable row requires numeric OD and Weight.");p.push({tag:t,cableType:n,count:r,size:o,rating:l,voltage:i,OD:a,weight:c,multi:h,zone:s,circuitGroup:u})}if(0===p.length)return void alert("ERROR: Add at least one cable before drawing the tray.");let h="";const m={};p.forEach((e,t)=>{if(null!==e.circuitGroup&&void 0!==e.circuitGroup&&""!==e.circuitGroup){const n=`${e.zone}_${e.circuitGroup}`;m[n]||(m[n]=[]),m[n].push({idx:t,cable:e})}});const y=[],g=new Set;Object.entries(m).forEach(([e,t])=>{const[n,r]=e.split("_").map(e=>parseInt(e)),o=t.map(e=>e.cable);if((3===t.length||4===t.length)&&o.every(e=>"Power"===e.cableType&&1===e.count&&!e.multi)){t.forEach(e=>g.add(e.idx));const e=Math.max(...o.map(e=>e.OD)),l=o.reduce((e,t)=>e+t.weight,0),i=e/2,a=2*i*(3===o.length?1+2/Math.sqrt(3):Math.SQRT2+1),c=[];3===o.length?(c.push({x:-i,y:-i/Math.sqrt(3)}),c.push({x:i,y:-i/Math.sqrt(3)}),c.push({x:0,y:2/Math.sqrt(3)*i})):(c.push({x:-i,y:-i}),c.push({x:i,y:-i}),c.push({x:-i,y:i}),c.push({x:i,y:i})),y.push({tag:o.map(e=>e.tag).join("+"),cableType:"Power",count:o.length,size:o.map(e=>e.size).join("+"),rating:NaN,voltage:NaN,OD:a,weight:l,multi:!1,zone:n,circuitGroup:r,isGroup:!0,members:o,offsets:c,spacingGap:2.15*e})}else h+=`<p class="warning">Circuit Group ${r} in Zone ${n} must contain 3 or 4 single-conductor power cables.</p>`,t.forEach(e=>{y.push(e.cable),g.add(e.idx)})}),p.forEach((e,t)=>{g.has(t)||y.push(e)});const{large:f,small:b}=E(p);let O=k(b),A=w(f);const F=p.filter(e=>!e.multi);let L="";if(F.length>0){const r=k(F),o=function(e,t){return e>=$("4/0 AWG")?40:"ladder"===t?50:40}(Math.max(...F.map(e=>$(e.size))),n),l=r/(e*t)*100;l>o+1e-6&&(L=`\n              <p class="nfpaWarn">\n                NFPA 70 392.22(B) WARNING:<br>\n                Single-conductor fill (${l.toFixed(0)} %) exceeds ${o} % allowable.\n              </p>`),F.some(e=>1===e.count&&$(e.size)<$("1/0 AWG"))&&(L+='\n              <p class="nfpaWarn">\n                NFPA 70 392.10(B)(1)(a) WARNING:<br>\n                Single-conductor cables smaller than #1/0 are not permitted in ladder cable trays.\n              </p>')}let N=function(e,t,n){let r=0;if(e.length>0){const t=w(e);r="solid"===n?t/.9:t}const o=k(t);for(const e of x){if(e<r)continue;const l=C(e,n);if(0===t.length||o<=l)return e}return null}(f,b,n);const T=document.getElementById("largeSpacing").checked,q=[...new Set(y.map(e=>e.zone))].sort((e,t)=>e-t);let G=[],B=[],D="",z="",j=[];const W=[];let P=0;q.forEach(t=>{const n=y.filter(e=>e.zone===t),r=I(n,e,T),o=p.filter(e=>e.zone===t);W.push({zid:t,cables:n,orig:o,width:r.widthUsed}),P+=r.widthUsed;const l=o.map(e=>e.voltage).filter(e=>!isNaN(e)),i=o.map(e=>e.rating).filter(e=>!isNaN(e));if(l.length>0&&i.length>0){const e=Math.max(...l),n=Math.min(...i);e>n+1e-6&&(z+=`\n                <p class="warning">\n                  WARNING: In Zone ${t}, operating voltage (${e.toFixed(0)} V) exceeds the lowest cable rating (${n.toFixed(0)} V).\n                </p>`)}});const R=x.find(e=>e>=P)||null;(!N||R&&R>N)&&(N=R);let M=P>e?e/P:1;function _(e){let n=0,r="";const o=[],l=[],i=[];return W.forEach(a=>{const c=a.width*e,s=I(a.cables,c,T),d=s.widthUsed,{large:u,small:p}=E(a.orig);if(s.largeCount>0&&s.smallCount>0){const e=k(u),n=k(p),o=s.barrierX,l=d-s.barrierX,i=o>0?Math.min(100,e/(o*t)*100):0,c=l>0?Math.min(100,n/(l*t)*100):0;r+=`<p><strong>Zone ${a.zid}.1 Fill %:</strong> ${i.toFixed(0)} %</p>`,r+=`<p><strong>Zone ${a.zid}.2 Fill %:</strong> ${c.toFixed(0)} %</p>`}else{const e=k(a.orig),n=d>0?Math.min(100,e/(d*t)*100):0;r+=`<p><strong>Zone ${a.zid} Fill %:</strong> ${n.toFixed(0)} %</p>`}n>0&&o.push(n),s.largeCount>0&&s.smallCount>0?(o.push(n+s.barrierX),l.push(`${a.zid}.1`),l.push(`${a.zid}.2`)):l.push(`${a.zid}`),s.placed.forEach(e=>{e.x+=n,i.push(e)}),n+=d}),{placed:i,lines:o,names:l,width:n,html:r}}let J=_(M);for(let t=0;t<8&&J.width>e+1e-6;t++)M*=e/J.width,J=_(M);G=J.placed,B=J.lines,j=J.names,J.width,D=J.html;const U=p.every(e=>"Control"===e.cableType||"Signal"===e.cableType);let V="";if(!U){const t="ladder"===n?S[e]||0:v[e]||0;if(t>0){let r=t-("ladder"===n?1.2:1)*A;r<0&&(r=0),O>r+1e-6&&(V=`\n                <p class="nfpaWarn">\n                  NFPA 70 Table 392.22(A) WARNING:<br>\n                  Small‐cable area (${O.toFixed(2)} in²) exceeds NFPA allowable\n                  (${r.toFixed(2)} in²) for a ${e}" ${"ladder"===n?"Ladder":"Solid Bottom"} tray.\n                </p>`)}}let X="";const H=O/(e*t)*100;U&&("ladder"===n&&H>50?X=`\n              <p class="nfpaWarn">\n                NFPA 70 392.22(A)(2) WARNING:<br>\n                All cables are Control/Signal and Fill % (${H.toFixed(0)} %) exceeds 50 % for Ladder tray.\n              </p>`:"solid"===n&&H>40&&(X=`\n              <p class="nfpaWarn">\n                NFPA 70 392.22(A)(4) WARNING:<br>\n                All cables are Control/Signal and Fill % (${H.toFixed(0)} %) exceeds 40 % for Solid Bottom tray.\n              </p>`));const Z=p.reduce((e,t)=>e+t.weight,0);let K=`\n          <p>\n            <strong>Using Tray Width:</strong> ${e}"<br>\n            <strong>Tray Depth:</strong> ${t}"<br>\n            <strong>Type:</strong> ${"ladder"===n?"Ladder (50 % fill)":"Solid Bottom (40 % fill)"}\n          </p>\n\n          <p>\n            <strong>Stackable Cables Cross-Sectional Area:</strong>\n            ${O.toFixed(2)} in²\n          </p>\n          ${D}\n          <p>\n            <strong>Non-Stackable Cables Sum of Diameters:</strong>\n            ${A.toFixed(2)} in\n          </p>\n\n          <p>\n          <strong>Total Cable Weight:</strong> ${Z.toFixed(2)} lbs/ft\n        </p>\n        ${V}\n        ${X}\n        ${L}\n        ${h}\n        ${z}\n      `;l=G,i=B,a=e,c=t,s=20,d=j.slice();let Y=!1,Q=!1;G.forEach(n=>{n.x+n.r>e+1e-6&&(Y=!0),n.y+n.r>t+1e-6&&(Q=!0)});const ee=s,te=t*ee,ne=e*ee,re=44;let oe=`\n          <svg\n            width="${ne}"\n            height="${44+te}"\n            style="background:#f9f9f9; border:1px solid #999;"\n          >\n        `;r&&(oe+=`\n            <text\n              x="${(ne/2).toFixed(2)}"\n              y="14"\n              font-size="16px"\n              text-anchor="middle"\n              fill="#000"\n              font-family="Arial, sans-serif"\n            >${r}</text>\n          `),B.forEach(e=>{const t=(e*ee).toFixed(2);oe+=`\n            <line\n              x1="${t}" y1="44"\n              x2="${t}" y2="${(re+te).toFixed(2)}"\n              stroke="#aa3300"\n              stroke-width="2"\n              stroke-dasharray="4 2"\n            />\n          `});const le=[0,...B,e];for(let e=0;e<le.length-1;e++){const t=le[e]*ee,n=le[e+1]*ee,r=(t+n)/2,o=(le[e+1]-le[e]).toFixed(1)+'"',l=j[e]?`Zone ${j[e]}`:"Zone Unknown";oe+=`\n            <line x1="${t.toFixed(2)}" y1="28" x2="${n.toFixed(2)}" y2="28" stroke="#000" stroke-width="1" />\n            <line x1="${t.toFixed(2)}" y1="24" x2="${t.toFixed(2)}" y2="32" stroke="#000" stroke-width="1" />\n            <line x1="${n.toFixed(2)}" y1="24" x2="${n.toFixed(2)}" y2="32" stroke="#000" stroke-width="1" />\n            <text x="${r.toFixed(2)}" y="22" font-size="10px" text-anchor="middle" font-family="Arial, sans-serif">${l}</text>\n            <text x="${r.toFixed(2)}" y="38" font-size="10px" text-anchor="middle" font-family="Arial, sans-serif">${o}</text>\n          `}if(oe+=`\n          <rect\n            x="0" y="44"\n            width="${(e*ee).toFixed(2)}"\n            height="${(t*ee).toFixed(2)}"\n            fill="none"\n            stroke="#333"\n            stroke-width="2"\n          />\n        `,G.forEach(e=>{if(e.isGroup&&e.members&&e.offsets){const n=e.x*ee,r=re+(t-e.y)*ee,o=e.r*ee;oe+=`\n              <circle\n                cx="${n.toFixed(2)}"\n                cy="${r.toFixed(2)}"\n                r="${o.toFixed(2)}"\n                fill="none"\n                stroke="#0066aa"\n                stroke-width="1"\n                stroke-dasharray="4 2"\n              />\n            `,e.members.forEach((n,r)=>{const o=(e.x+e.offsets[r].x)*ee,l=re+(t-(e.y+e.offsets[r].y))*ee,i=n.OD/2*ee;oe+=`\n                <circle\n                  cx="${o.toFixed(2)}"\n                  cy="${l.toFixed(2)}"\n                  r="${i.toFixed(2)}"\n                  fill="#66ccff"\n                  stroke="#0066aa"\n                  stroke-width="1"\n                >\n                  <title>\nCable Tag: ${n.tag}\nCable Type: ${n.cableType}\nConductors: ${n.count}\nSize: ${n.size}\nOD: ${n.OD.toFixed(2)}″\nWt: ${n.weight.toFixed(2)} lbs/ft\n                  </title>\n                </circle>\n              `})}else{const n=e.x*ee,r=re+(t-e.y)*ee,o=e.r*ee;oe+=`\n              <circle\n                cx="${n.toFixed(2)}"\n                cy="${r.toFixed(2)}"\n                r="${o.toFixed(2)}"\n                fill="#66ccff"\n                stroke="#0066aa"\n                stroke-width="1"\n              >\n                <title>\nCable Tag: ${e.tag}\nCable Type: ${e.cableType}\nConductors: ${e.count}\nSize: ${e.size}\nOD: ${e.OD.toFixed(2)}″\nWt: ${e.weight.toFixed(2)} lbs/ft\n                </title>\n              </circle>\n            `}}),oe+="</svg>",document.getElementById("svgContainer").innerHTML=oe,(Y||Q)&&(Y&&(K+=N&&N>e?`\n                <p class="warning">\n                  WARNING: Some cables extend beyond the tray width (${e}").\n                </p>\n                <p class="recommend">\n                  Recommend larger standard width: ${N}" \n                </p>`:`\n                <p class="warning">\n                  WARNING: Some cables extend beyond the tray width (${e}").\n                </p>\n                <p class="recommend">\n                  No larger standard width can accommodate all cables.\n                </p>`),Q)){const e=Math.max(...G.map(e=>e.y+e.r));K+=`\n              <p class="warning">\n                WARNING: Some cables extend above the tray depth (${t}").\n              </p>\n              <p class="recommend">\n                Recommend increasing tray depth to at least ${e.toFixed(2)}".\n              </p>`}document.getElementById("results").innerHTML=K}),document.getElementById("expandBtn").addEventListener("click",()=>{if(!l)return void alert("Please click “Draw Tray” first, then Expand.");const e=160,t=a,n=c,r=document.getElementById("trayName").value.trim(),o=n*e,s=t*e,u=76;let p=`\n          <svg\n            width="${s}"\n            height="${76+o}"\n            style="background:#f9f9f9; border:1px solid #333;"\n          >\n        `;r&&(p+=`\n            <text\n              x="${(s/2).toFixed(2)}"\n              y="24"\n              font-size="24px"\n              text-anchor="middle"\n              fill="#000"\n              font-family="Arial, sans-serif"\n            >${r}</text>\n          `),i.forEach(t=>{const n=(t*e).toFixed(2);p+=`\n            <line\n              x1="${n}" y1="76"\n              x2="${n}" y2="${(u+o).toFixed(2)}"\n              stroke="#aa3300"\n              stroke-width="4"\n              stroke-dasharray="12 6"\n            />\n          `});const h=[0,...i,t];for(let t=0;t<h.length-1;t++){const n=h[t]*e,r=h[t+1]*e,o=(n+r)/2,l=(h[t+1]-h[t]).toFixed(1)+'"',i=d[t]?`Zone ${d[t]}`:"Zone Unknown";p+=`\n            <line x1="${n.toFixed(2)}" y1="52" x2="${r.toFixed(2)}" y2="52" stroke="#000" stroke-width="2" />\n            <line x1="${n.toFixed(2)}" y1="44" x2="${n.toFixed(2)}" y2="60" stroke="#000" stroke-width="2" />\n            <line x1="${r.toFixed(2)}" y1="44" x2="${r.toFixed(2)}" y2="60" stroke="#000" stroke-width="2" />\n            <text x="${o.toFixed(2)}" y="40" font-size="18px" text-anchor="middle" font-family="Arial, sans-serif">${i}</text>\n            <text x="${o.toFixed(2)}" y="68" font-size="18px" text-anchor="middle" font-family="Arial, sans-serif">${l}</text>\n          `}p+=`\n          <rect\n            x="0" y="76"\n            width="${(t*e).toFixed(2)}"\n            height="${(n*e).toFixed(2)}"\n            fill="none"\n            stroke="#333"\n            stroke-width="4"\n          />\n        `,l.forEach(t=>{if(t.isGroup&&t.members&&t.offsets){const r=t.x*e,o=u+(n-t.y)*e,l=t.r*e;p+=`\n              <circle\n                cx="${r.toFixed(2)}"\n                cy="${o.toFixed(2)}"\n                r="${l.toFixed(2)}"\n                fill="none"\n                stroke="#0066aa"\n                stroke-width="2"\n                stroke-dasharray="8 4"\n              />\n            `,t.members.forEach((r,o)=>{const l=(t.x+t.offsets[o].x)*e,i=u+(n-(t.y+t.offsets[o].y))*e,a=r.OD/2*e;p+=`\n                <circle\n                  cx="${l.toFixed(2)}"\n                  cy="${i.toFixed(2)}"\n                  r="${a.toFixed(2)}"\n                  fill="#66ccff"\n                  stroke="#0066aa"\n                  stroke-width="2"\n                >\n                  <title>\nCable Tag: ${r.tag}\nCable Type: ${r.cableType}\nConductors: ${r.count}\nSize: ${r.size}\nOD: ${r.OD.toFixed(2)}″\nWt: ${r.weight.toFixed(2)} lbs/ft\n                  </title>\n                </circle>\n              `;const c=Math.min(.15*a,20),s=[`${r.tag}`,`${r.cableType}`,`${r.count}C ${r.size}`,`OD: ${r.OD.toFixed(2)}″`,`Wt: ${r.weight.toFixed(2)}`],d=1.1*c;let h=i-s.length*d/2+d/2;s.forEach((e,t)=>{p+=`\n                  <text\n                    x="${l.toFixed(2)}"\n                    y="${(h+t*d).toFixed(2)}"\n                    font-size="${c}px"\n                    text-anchor="middle"\n                    fill="#000"\n                    stroke="none"\n                    font-family="Arial, sans-serif"\n                    pointer-events="none"\n                  >\n                    ${e}\n                  </text>\n                `})})}else{const r=t.x*e,o=u+(n-t.y)*e,l=t.r*e;p+=`\n              <circle\n                cx="${r.toFixed(2)}"\n                cy="${o.toFixed(2)}"\n                r="${l.toFixed(2)}"\n                fill="#66ccff"\n                stroke="#0066aa"\n                stroke-width="2"\n              />\n            `;const i=Math.min(.15*l,20),a=[`${t.tag}`,`${t.cableType}`,`${t.count}C ${t.size}`,`OD: ${t.OD.toFixed(2)}″`,`Wt: ${t.weight.toFixed(2)}`],c=1.1*i;let s=o-a.length*c/2+c/2;a.forEach((e,t)=>{p+=`\n                <text\n                  x="${r.toFixed(2)}"\n                  y="${(s+t*c).toFixed(2)}"\n                  font-size="${i}px"\n                  text-anchor="middle"\n                  fill="#000"\n                  stroke="none"\n                  font-family="Arial, sans-serif"\n                  pointer-events="none"\n                >\n                  ${e}\n                </text>\n              `})}}),p+="</svg>",document.getElementById("expandedSVG").innerHTML=p,document.getElementById("overlay").style.display="flex"}),document.getElementById("copyBtn").addEventListener("click",()=>{const e=document.getElementById("expandedSVG").querySelector("svg");if(!e)return void alert("No expanded SVG found to copy.");const t=e.outerHTML;navigator.clipboard.writeText(t).then(()=>{alert("SVG markup copied to clipboard!")}).catch(e=>{alert("Error copying SVG: "+e)})}),document.getElementById("printBtn").addEventListener("click",()=>{const e=document.getElementById("expandedSVG").querySelector("svg");if(!e)return void alert("No expanded SVG found to print.");const t=e.outerHTML,n=window.open("","_blank");n.document.write(`<!DOCTYPE html>\n<html>\n<head>\n  <title>Print Cable Tray</title>\n</head>\n<body style="margin:0; padding:0;">\n  ${t}\n</body>\n</html>`),n.document.close(),n.focus(),setTimeout(()=>{n.print()},200)}),document.getElementById("copyPngBtn").addEventListener("click",()=>{const e=document.getElementById("expandedSVG").querySelector("svg");if(!e)return void alert("No expanded SVG found to copy as PNG.");const t=(new XMLSerializer).serializeToString(e),n=new Blob([t],{type:"image/svg+xml;charset=utf-8"}),r=URL.createObjectURL(n),o=new Image;o.onload=()=>{const t=document.createElement("canvas");t.width=e.getAttribute("width"),t.height=e.getAttribute("height");const n=t.getContext("2d");n.fillStyle="#ffffff",n.fillRect(0,0,t.width,t.height),n.drawImage(o,0,0),t.toBlob(e=>{if(!e)return alert("Failed to create PNG blob."),void URL.revokeObjectURL(r);const t=new ClipboardItem({"image/png":e});navigator.clipboard.write([t]).then(()=>{alert("PNG copied to clipboard!"),URL.revokeObjectURL(r)}).catch(e=>{alert("Error copying PNG: "+e),URL.revokeObjectURL(r)})},"image/png")},o.onerror=()=>{alert("Failed to load SVG into image for PNG conversion."),URL.revokeObjectURL(r)},o.src=r}),document.getElementById("popupClose").addEventListener("click",()=>{document.getElementById("overlay").style.display="none"}),document.getElementById("exportExcelBtn").addEventListener("click",()=>{const e=Array.from(u.querySelectorAll("tr"));if(0===e.length)return void alert("No cables to export.");const t=[["Tag","Cable Type","Conductors","Conductor Size","Cable Rating (V)","Operating Voltage (V)","OD","Weight","Zone","Circuit Group"]];e.forEach(e=>{const n=e.children[0].querySelector("input").value.trim(),r=e.children[1].querySelector("select").value,o=e.children[2].querySelector("input").value.trim(),l=e.children[3].querySelector("input").value.trim(),i=e.children[4].querySelector("input").value.trim(),a=e.children[5].querySelector("input").value.trim(),c=e.children[6].querySelector("input").value.trim(),s=e.children[7].querySelector("input").value.trim(),d=e.children[8].querySelector("input").value.trim(),u=e.children[9].querySelector("input").value.trim();t.push([n,r,o,l,i,a,c,s,d,u])});const n=XLSX.utils.book_new(),r=XLSX.utils.aoa_to_sheet(t);XLSX.utils.book_append_sheet(n,r,"Cables"),XLSX.writeFile(n,"CableList.xlsx")}),document.getElementById("importExcelBtn").addEventListener("click",()=>{document.getElementById("importExcelInput").click()}),document.getElementById("importExcelInput").addEventListener("change",e=>{const t=e.target.files[0];if(!t)return;const n=new FileReader;n.onload=e=>{const t=e.target.result,n=XLSX.read(t,{type:"binary"}),o=n.Sheets[n.SheetNames[0]],l=XLSX.utils.sheet_to_json(o,{defval:""});0!==l.length?(u.innerHTML="",l.forEach((e,t)=>{const{Tag:n,"Cable Type":o,Conductors:l,"Conductor Size":i,"Cable Rating (V)":a,"Operating Voltage (V)":c,OD:s,Weight:d,Zone:p,"Circuit Group":h}=e;if(void 0===n||void 0===o||void 0===l||void 0===i||void 0===a||void 0===c||void 0===s||void 0===d)return void alert(`Row ${t+2} missing one of: Tag, Cable Type, Conductors, Conductor Size, Cable Rating (V), Operating Voltage (V), OD, Weight.`);const m=f();m.children[0].querySelector("input").value=n,m.children[1].querySelector("select").value=o,m.children[2].querySelector("input").value=l,m.children[3].querySelector("input").value=i,m.children[4].querySelector("input").value=a,m.children[5].querySelector("input").value=c;m.children[3].querySelector("input").dispatchEvent(new Event("input"));const y=m.children[6].querySelector("input"),g=m.children[7].querySelector("input"),b=m.children[8].querySelector("input"),x=m.children[9].querySelector("input");r.findIndex(e=>e.conductors===parseInt(l)&&e.size===i)<0&&(y.value=parseFloat(s).toFixed(2),g.value=parseFloat(d).toFixed(2),y.readOnly=!1,g.readOnly=!1),b.value=p||1,x.value=e["Circuit Group"]||"",u.appendChild(m)}),y(),alert("Excel imported. Correct any unrecognized conductor details if needed."),document.getElementById("importExcelInput").value=""):alert("Excel sheet is empty.")},n.readAsBinaryString(t)}),document.getElementById("importHelpBtn").addEventListener("click",()=>{alert("Import Instructions:\n1. Click 'Export Excel' to download a template.\n2. Fill in Tag, Cable Type, Conductors, Conductor Size, Cable Rating (V), Operating Voltage (V), OD, Weight, Zone, and Circuit Group.\n3. Save the file then choose it with 'Import Excel'.")});const F=document.getElementById("profileList");function L(){F.innerHTML="";const e=Object.keys(localStorage).filter(e=>e.startsWith("trayProfile_"));if(0===e.length){const e=document.createElement("option");return e.value="",e.textContent="-- no profiles saved --",void F.appendChild(e)}const t=document.createElement("option");t.value="",t.textContent="-- select profile --",F.appendChild(t),e.sort(),e.forEach(e=>{const t=e.replace("trayProfile_",""),n=document.createElement("option");n.value=t,n.textContent=t,F.appendChild(n)})}document.getElementById("saveProfileBtn").addEventListener("click",()=>{const e=prompt("Enter a name for this cable profile:");if(!e)return;const t=Array.from(u.querySelectorAll("tr")),n=[];for(const e of t){const t=e.children[0].querySelector("input").value.trim(),r=e.children[1].querySelector("select").value,o=parseInt(e.children[2].querySelector("input").value),l=e.children[3].querySelector("input").value.trim(),i=parseFloat(e.children[4].querySelector("input").value),a=parseFloat(e.children[5].querySelector("input").value),c=parseFloat(e.children[6].querySelector("input").value),s=parseFloat(e.children[7].querySelector("input").value),d=parseInt(e.children[8].querySelector("input").value)||1,u=e.children[9].querySelector("input").value,p=u?parseInt(u):null,h=o>1;if(!t||!r||!o||!l||isNaN(c)||isNaN(s))return void alert("All rows must have Tag, Cable Type, conductor count/size, OD, and Weight before saving.");n.push({tag:t,cableType:r,count:o,size:l,rating:i,voltage:a,OD:c,weight:s,multi:h,zone:d,circuitGroup:p})}try{localStorage.setItem("trayProfile_"+e,JSON.stringify(n)),alert(`Profile "${e}" saved.`),L()}catch(e){alert("Error saving profile: "+e.message)}}),document.getElementById("loadProfileBtn").addEventListener("click",()=>{const e=F.value;if(!e)return void alert("Select a profile to load.");const t=localStorage.getItem("trayProfile_"+e);if(!t)return alert(`Profile "${e}" not found.`),void L();let n;try{n=JSON.parse(t)}catch(e){return void alert("Error parsing profile data: "+e.message)}u.innerHTML="",n.forEach(e=>{const t=f();t.children[0].querySelector("input").value=e.tag,t.children[1].querySelector("select").value=e.cableType,t.children[2].querySelector("input").value=e.count,t.children[3].querySelector("input").value=e.size,t.children[4].querySelector("input").value=e.rating||"",t.children[5].querySelector("input").value=e.voltage||"";t.children[3].querySelector("input").dispatchEvent(new Event("input"));const n=t.children[6].querySelector("input"),o=t.children[7].querySelector("input"),l=t.children[8].querySelector("input"),i=t.children[9].querySelector("input");r.findIndex(t=>t.conductors===e.count&&t.size===e.size)<0&&(n.value=e.OD.toFixed(2),o.value=e.weight.toFixed(2),n.readOnly=!1,o.readOnly=!1),l.value=e.zone||1,i.value=e.circuitGroup||"",u.appendChild(t)}),y(),alert(`Profile "${e}" loaded.`)}),document.getElementById("deleteProfileBtn").addEventListener("click",()=>{const e=F.value;e?confirm(`Delete profile "${e}"?`)&&(localStorage.removeItem("trayProfile_"+e),alert(`Profile "${e}" deleted.`),L()):alert("Select a profile to delete.")}),L(),["trayWidth","trayDepth","trayType","trayName","largeSpacing"].forEach(e=>{const t=document.getElementById(e);t&&(t.addEventListener("input",n),t.addEventListener("change",n))});const N=document.getElementById("cableTable");N&&(N.addEventListener("input",n),N.addEventListener("click",e=>{"BUTTON"===e.target.tagName&&n()}));const T=document.getElementById("addCableBtn");T&&T.addEventListener("click",n);const q=document.getElementById("importExcelInput");q&&q.addEventListener("change",n),["saveProfileBtn","loadProfileBtn","exportExcelBtn"].forEach(e=>{const n=document.getElementById(e);n&&n.addEventListener("click",t)});const G=localStorage.getItem("trayFillData");if(G){try{const{tray:e,cables:t}=JSON.parse(G);document.getElementById("trayWidth").value=e.width,document.getElementById("trayDepth").value=e.height,document.getElementById("trayName").value=e.tray_id||"",u.innerHTML="",Array.isArray(t)&&t.forEach(e=>{const t=f();t.children[0].querySelector("input").value=e.name||e.tag||"",t.children[1].querySelector("select").value=e.cable_type||"",t.children[2].querySelector("input").value=e.conductors||e.count||1;const n=t.children[3].querySelector("input");n.value=e.conductor_size||e.size||"",t.children[4].querySelector("input").value=e.rating||"",t.children[5].querySelector("input").value=e.voltage||"",n.dispatchEvent(new Event("input"));const o=t.children[6].querySelector("input"),l=t.children[7].querySelector("input");if(r.findIndex(e=>e.conductors===parseInt(t.children[2].querySelector("input").value)&&e.size===n.value)<0){const t=parseFloat(e.cable_od??e.diameter??e.OD??e.od);o.value=Number.isFinite(t)?t.toFixed(2):"",l.value=(parseFloat(e.weight)||0).toFixed(2),o.readOnly=!1,l.readOnly=!1}t.children[8].querySelector("input").value=e.zone||e.cable_zone||1,t.children[9].querySelector("input").value=e.circuitGroup||e.circuit_group||"",u.appendChild(t)}),y(),document.getElementById("drawBtn").click()}catch(e){console.error("Failed to load trayFillData",e)}localStorage.removeItem("trayFillData")}document.querySelectorAll(".helpBtn").forEach(e=>{e.addEventListener("click",()=>{alert(e.getAttribute("data-help"))})})})}();
