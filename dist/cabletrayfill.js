!function(){"use strict";window.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".workflow-grid .workflow-card").forEach(e=>{const t=e.dataset.storageKey,n=e.querySelector(".status");n&&(t&&localStorage.getItem(t)?(e.classList.add("complete"),n.textContent="✓",n.setAttribute("aria-label","Completed")):n.textContent="Incomplete")})});const e="a[href],button:not([disabled]),textarea:not([disabled]),input:not([disabled]),select:not([disabled]),[tabindex]:not([tabindex='-1'])";function t(t,n){if("Tab"!==t.key)return;const r=n.querySelectorAll(e);if(!r.length)return;const o=r[0],l=r[r.length-1];t.shiftKey&&document.activeElement===o?(t.preventDefault(),l.focus()):t.shiftKey||document.activeElement!==l||(t.preventDefault(),o.focus())}window.initSettings=function(){const n=document.getElementById("settings-btn"),r=document.getElementById("settings-menu");if(n&&r){r.setAttribute("role","dialog"),r.setAttribute("aria-modal","true"),r.setAttribute("aria-hidden","true");let o=!1;const l=e=>{"Escape"===e.key?a():t(e,r)},i=()=>{o=!0,r.style.display="flex",r.setAttribute("aria-hidden","false"),n.setAttribute("aria-expanded","true"),document.addEventListener("keydown",l);const t=r.querySelectorAll(e);t.length&&t[0].focus()},a=()=>{o&&(o=!1,r.style.display="none",r.setAttribute("aria-hidden","true"),n.setAttribute("aria-expanded","false"),document.removeEventListener("keydown",l),n.focus())};n.addEventListener("click",()=>{o?a():i()}),document.addEventListener("click",e=>{o&&!r.contains(e.target)&&e.target!==n&&a()})}},window.initDarkMode=function(){const e=document.getElementById("dark-toggle"),t=JSON.parse(localStorage.getItem("ctrSession")||"{}");if(void 0===t.darkMode){const e=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches;t.darkMode=e,localStorage.setItem("ctrSession",JSON.stringify(t))}document.body.classList.toggle("dark-mode",t.darkMode),e&&(e.checked=!!t.darkMode),e&&e.addEventListener("change",()=>{document.body.classList.toggle("dark-mode",e.checked),t.darkMode=e.checked,localStorage.setItem("ctrSession",JSON.stringify(t)),"function"==typeof window.saveSession&&window.saveSession(),"function"==typeof window.saveDuctbankSession&&window.saveDuctbankSession()}),window.addEventListener("storage",t=>{if("ctrSession"===t.key)try{const n=JSON.parse(t.newValue);document.body.classList.toggle("dark-mode",n&&n.darkMode),e&&(e.checked=!(!n||!n.darkMode))}catch{}})},window.initHelpModal=function(n="help-btn",r="help-modal",o){const l=document.getElementById(n),i=document.getElementById(r),a=o?document.getElementById(o):i?i.querySelector(".close-btn"):null;if(l&&i&&a){i.setAttribute("role","dialog"),i.setAttribute("aria-modal","true"),i.setAttribute("aria-hidden","true");const n=e=>{"Escape"===e.key?o():t(e,i)},r=()=>{i.style.display="flex",i.setAttribute("aria-hidden","false"),l.setAttribute("aria-expanded","true"),document.addEventListener("keydown",n);const t=i.querySelectorAll(e);t.length&&t[0].focus()},o=()=>{i.style.display="none",i.setAttribute("aria-hidden","true"),l.setAttribute("aria-expanded","false"),document.removeEventListener("keydown",n),l.focus()};l.addEventListener("click",r),a.addEventListener("click",o),i.addEventListener("click",e=>{e.target===i&&o()})}},window.initNavToggle=function(){const e=document.querySelector(".top-nav");if(!e)return;const t=e.querySelector(".nav-toggle");t&&t.addEventListener("click",()=>{e.classList.toggle("open")})},window.checkPrereqs=function(e=[]){const t=e.filter(e=>!localStorage.getItem(e.key));t.length&&document.addEventListener("DOMContentLoaded",()=>{const e=document.createElement("div");e.style.cssText="background:#fee;border:1px solid #f99;padding:10px;margin:10px;",e.innerHTML="Missing required data: "+t.map(e=>`<a href="${e.page}">${e.label}</a>`).join(", ")+".",document.body.prepend(e),document.querySelectorAll("main button, aside button").forEach(e=>e.disabled=!0)})},document.addEventListener("keydown",e=>{if(!e.target.matches("table input, table select, table button"))return;const t=e.key;if("ArrowUp"!==t&&"ArrowDown"!==t&&"Enter"!==t)return;const n=e.target.closest("td");if(!n)return;const r=n.parentElement,o=Array.prototype.indexOf.call(r.children,n),l="ArrowUp"===t?r.previousElementSibling:r.nextElementSibling;if(l){const t=l.children[o].querySelector("input,select,button");t&&(e.preventDefault(),t.focus(),"function"==typeof t.select&&t.select())}}),checkPrereqs([{key:"traySchedule",page:"racewayschedule.html",label:"Raceway Schedule"}]),document.addEventListener("DOMContentLoaded",function(){initSettings(),initDarkMode(),initHelpModal("help-btn","helpOverlay","helpClose"),initNavToggle();let e=!0;const t=()=>{e=!0},n=()=>{e=!1};window.addEventListener("beforeunload",t=>{e||(t.preventDefault(),t.returnValue="")});const r=[{label:"3/C – #8 AWG",conductors:3,size:"#8 AWG",OD:.66,weight:.33},{label:"3/C – #6 AWG",conductors:3,size:"#6 AWG",OD:.74,weight:.45},{label:"3/C – #4 AWG",conductors:3,size:"#4 AWG",OD:.88,weight:.66},{label:"3/C – #2 AWG",conductors:3,size:"#2 AWG",OD:1,weight:.96},{label:"3/C – #1 AWG",conductors:3,size:"#1 AWG",OD:1.13,weight:1.17},{label:"3/C – 1/0 AWG",conductors:3,size:"1/0 AWG",OD:1.22,weight:1.43},{label:"3/C – 2/0 AWG",conductors:3,size:"2/0 AWG",OD:1.31,weight:1.72},{label:"3/C – 3/0 AWG",conductors:3,size:"3/0 AWG",OD:1.42,weight:2.14},{label:"3/C – 4/0 AWG",conductors:3,size:"4/0 AWG",OD:1.55,weight:2.64},{label:"3/C – 250 kcmil",conductors:3,size:"250 kcmil",OD:1.76,weight:3.18},{label:"3/C – 350 kcmil",conductors:3,size:"350 kcmil",OD:1.98,weight:4.29},{label:"3/C – 500 kcmil",conductors:3,size:"500 kcmil",OD:2.26,weight:5.94},{label:"3/C – 750 kcmil",conductors:3,size:"750 kcmil",OD:2.71,weight:9.01},{label:"3/C – 1000 kcmil",conductors:3,size:"1000 kcmil",OD:3.1,weight:11.7}],o=document.getElementById("sizeList");["#22 AWG","#20 AWG","#18 AWG","#16 AWG","#14 AWG","#12 AWG","#10 AWG","#8 AWG","#6 AWG","#4 AWG","#2 AWG","#1 AWG","1/0 AWG","2/0 AWG","3/0 AWG","4/0 AWG","250 kcmil","350 kcmil","500 kcmil","750 kcmil","1000 kcmil"].forEach(e=>{const t=document.createElement("option");t.value=e,o.appendChild(t)});let l=null,i=[],a=0,c=0,d=20,s=[];const u=document.querySelector("#cableTable tbody");function p(){const e=document.createElement("tr"),t=document.createElement("td"),n=document.createElement("input");n.type="text",n.placeholder="e.g. P-20MP007-01",n.required=!0,n.style.width="120px",t.appendChild(n),e.appendChild(t);const o=document.createElement("td"),l=document.createElement("select");l.style.width="120px";const i=document.createElement("option");i.value="",i.textContent="-- select --",l.appendChild(i),["Power","Control","Signal"].forEach(e=>{const t=document.createElement("option");t.value=e,t.textContent=e,l.appendChild(t)}),o.appendChild(l),e.appendChild(o);const a=document.createElement("td"),c=document.createElement("input");c.type="number",c.step="1",c.min="1",c.style.width="60px",a.appendChild(c),e.appendChild(a);const d=document.createElement("td"),s=document.createElement("input");s.type="text",s.setAttribute("list","sizeList"),s.placeholder="e.g. #1 AWG",s.style.width="100px",d.appendChild(s),e.appendChild(d);const h=document.createElement("td"),m=document.createElement("input");m.type="number",m.step="1",m.style.width="80px",h.appendChild(m),e.appendChild(h);const y=document.createElement("td"),g=document.createElement("input");g.type="number",g.step="1",g.style.width="80px",y.appendChild(g),e.appendChild(y);const f=document.createElement("td"),x=document.createElement("input");x.type="number",x.placeholder="0.00",x.step="0.01",x.style.width="60px",x.readOnly=!0,f.appendChild(x),e.appendChild(f);const v=document.createElement("td"),b=document.createElement("input");b.type="number",b.placeholder="0.00",b.step="0.01",b.style.width="60px",b.readOnly=!0,v.appendChild(b),e.appendChild(v);const E=document.createElement("td"),S=document.createElement("input");S.type="number",S.step="1",S.min="1",S.style.width="50px",S.value="1",E.appendChild(S),e.appendChild(E);const w=document.createElement("td"),$=document.createElement("input");$.type="number",$.step="1",$.min="1",$.style.width="50px",$.value="",w.appendChild($),e.appendChild(w);const k=document.createElement("td"),C=document.createElement("button");C.type="button",C.textContent="⧉",C.className="duplicateBtn",C.addEventListener("click",()=>{const t=p();t.children[0].querySelector("input").value=n.value,t.children[1].querySelector("select").value=l.value,t.children[2].querySelector("input").value=c.value;const r=t.children[3].querySelector("input");r.value=s.value,r.dispatchEvent(new Event("input"));const o=t.children[4].querySelector("input"),i=t.children[5].querySelector("input"),a=t.children[6].querySelector("input"),d=t.children[7].querySelector("input"),h=t.children[8].querySelector("input"),y=t.children[9].querySelector("input");o.value=m.value,i.value=g.value,a.value=x.value,d.value=b.value,h.value=S.value,y.value=$.value,a.readOnly=x.readOnly,d.readOnly=b.readOnly,u.insertBefore(t,e.nextSibling)}),k.appendChild(C),e.appendChild(k);const F=document.createElement("td"),A=document.createElement("button");function q(){const e=parseInt(c.value),t=s.value.trim(),n=r.findIndex(n=>n.conductors===e&&n.size===t);n>=0?(x.value=r[n].OD.toFixed(2),b.value=r[n].weight.toFixed(2),x.readOnly=!0,b.readOnly=!0):(x.value="",b.value="",x.readOnly=!1,b.readOnly=!1)}return A.type="button",A.textContent="✖",A.className="removeBtn",A.addEventListener("click",()=>{u.removeChild(e)}),F.appendChild(A),e.appendChild(F),c.addEventListener("input",q),s.addEventListener("input",q),e}document.getElementById("addCableBtn").addEventListener("click",()=>{u.appendChild(p())}),document.getElementById("addCableBtn").click();const h={6:7,9:10.5,12:14,18:21,24:28,30:32.5,36:39},m=[6,9,12,18,24,30,36],y={6:7,9:10.5,12:14,18:21,24:28,30:32.5,36:39},g={6:5.5,9:8,12:11,18:16.5,24:22,30:27.5,36:33};function f(e){const t=[],n=[],r=E("1/0 AWG"),o=E("4/0 AWG");return e.forEach(e=>{const l=E(e.size);e.isGroup||e.OD>=1.55||1===e.count&&l>=r&&l<=o?t.push(e):n.push(e)}),{large:t,small:n}}function x(e){return e.reduce((e,t)=>e+t.OD,0)}function v(e){return e.reduce((e,t)=>e+Math.PI*(t.OD/2)**2,0)}function b(e,t){const n=h[e]||0;return"solid"===t?.78*n:n}function E(e){if(!e)return-1/0;const t=e.trim().toUpperCase();if(t.endsWith("KCMIL"))return 2e3+parseFloat(t);const n=t.match(/(\d+)\/0\s*AWG/);if(n)return 1e3+parseInt(n[1]);const r=t.match(/#(\d+)\s*AWG/);return r?-parseInt(r[1]):NaN}function S(e,t){const n=e.slice().sort((e,t)=>t.OD-e.OD),r=[];return n.forEach((e,n)=>{const o=e.OD/2;let l;if(0===n)l=o;else{const i=r[n-1];if(t){const t=i.spacingGap||2*i.r,n=e.spacingGap||2*o,r=Math.max(t,n);l=i.x+i.r+r+o}else l=i.x+i.r+o}const i=Object.assign({},e,{x:l,y:o,r:o});r.push(i)}),r}function w(e,t,n,r){const o=r.map(e=>({x:e.x,y:e.y,r:e.r,OD:e.OD,tag:e.tag,cableType:e.cableType,count:e.count,size:e.size,weight:e.weight})),l=e.slice().sort((e,t)=>t.OD-e.OD),i=1e-6;return l.forEach(e=>{const r=e.OD/2;let l={x:null,y:1/0};const a=[];a.push({x:n+r,y:r}),o.forEach(e=>{const o=e.x-(e.r+r),l=e.x+(e.r+r);o>=n+r-i&&o<=t-r+i&&a.push({x:o,y:r}),l>=n+r-i&&l<=t-r+i&&a.push({x:l,y:r})});for(let e=0;e<o.length;e++){const l=o[e],c=l.r+r;for(let d=e+1;d<o.length;d++){const e=o[d],s=e.r+r,u=e.x-l.x,p=e.y-l.y,h=u*u+p*p,m=Math.sqrt(h);if(m<i||m>c+s-i||m<Math.abs(c-s)+i)continue;const y=(c*c-s*s+h)/(2*m),g=c*c-y*y;if(g<-i)continue;const f=Math.sqrt(Math.max(0,g)),x=l.x+y*u/m,v=l.y+y*p/m,b=f/m*-p,E=u*(f/m);[{x:x+b,y:v+E},{x:x-b,y:v-E}].forEach(({x:e,y:o})=>{e>=n+r-i&&e<=t-r+i&&o>=r-i&&a.push({x:e,y:o})})}}if(o.forEach(e=>{const t=n+r,o=Math.abs(t-e.x),l=e.r+r;if(o<l-i){const n=Math.sqrt(Math.max(0,l*l-o*o)),c=e.y+n;c>=r-i&&a.push({x:t,y:c})}}),a.forEach(e=>{const a=e.x,c=e.y;if(a-r<n-i||a+r>t+i)return;if(c-r<-i)return;let d=!1;for(const e of o){const t=a-e.x,n=c-e.y,o=e.r+r;if(t*t+n*n<(o-i)*(o-i)){d=!0;break}}d||(c<l.y-i||Math.abs(c-l.y)<i&&a<l.x)&&(l={x:a,y:c})}),null===l.x){const e=n+r;let t=r;o.forEach(n=>{if(Math.abs(e-n.x)<n.r+r-i){const e=n.y+n.r+r;e>t&&(t=e)}}),l={x:e,y:t}}o.push({x:l.x,y:l.y,r:r,OD:e.OD,tag:e.tag,cableType:e.cableType,count:e.count,size:e.size,weight:e.weight})}),o}function $(e,t,n){const{large:r,small:o}=f(e);let l=[];r.length>0&&(l=S(r,n));let i=0;l.length>0&&(i=Math.max(...l.map(e=>e.x+e.r)));let a=l;o.length>0&&(a=w(o,t,i,l));const c=l.concat(a.slice(l.length)),d=c.length>0?Math.max(...c.map(e=>e.x+e.r)):0;return{placed:c,widthUsed:d,barrierX:i,largeCount:r.length,smallCount:o.length}}function $(e,t,n){const{large:r,small:o}=f(e);let l=[];r.length>0&&(l=S(r,n));let i=0;l.length>0&&(i=Math.max(...l.map(e=>e.x+e.r)));let a=l;o.length>0&&(a=w(o,t,i,l));const c=l.concat(a.slice(l.length)),d=c.length>0?Math.max(...c.map(e=>e.x+e.r)):0;return{placed:c,widthUsed:d,barrierX:i,largeCount:r.length,smallCount:o.length}}document.getElementById("drawBtn").addEventListener("click",()=>{const e=parseFloat(document.getElementById("trayWidth").value),t=parseFloat(document.getElementById("trayDepth").value),n=document.getElementById("trayType").value,r=document.getElementById("trayName").value.trim(),o=Array.from(u.querySelectorAll("tr")),p=[];for(const e of o){const t=e.children[0].querySelector("input").value.trim(),n=e.children[1].querySelector("select").value,r=parseInt(e.children[2].querySelector("input").value),o=e.children[3].querySelector("input").value.trim(),l=parseFloat(e.children[4].querySelector("input").value),i=parseFloat(e.children[5].querySelector("input").value),a=parseFloat(e.children[6].querySelector("input").value),c=parseFloat(e.children[7].querySelector("input").value),d=parseInt(e.children[8].querySelector("input").value)||1,s=e.children[9].querySelector("input").value,u=s?parseInt(s):null,h=r>1;if(!t)return void alert("ERROR: Every cable row requires a Tag.");if(!n)return void alert("ERROR: Every cable row requires a Cable Type.");if(!r||!o)return void alert("ERROR: Every cable row requires Conductor count and size.");if(isNaN(a)||isNaN(c))return void alert("ERROR: Every cable row requires numeric OD and Weight.");p.push({tag:t,cableType:n,count:r,size:o,rating:l,voltage:i,OD:a,weight:c,multi:h,zone:d,circuitGroup:u})}if(0===p.length)return void alert("ERROR: Add at least one cable before drawing the tray.");let h="";const S={};p.forEach((e,t)=>{if(null!==e.circuitGroup&&void 0!==e.circuitGroup&&""!==e.circuitGroup){const n=`${e.zone}_${e.circuitGroup}`;S[n]||(S[n]=[]),S[n].push({idx:t,cable:e})}});const w=[],k=new Set;Object.entries(S).forEach(([e,t])=>{const[n,r]=e.split("_").map(e=>parseInt(e)),o=t.map(e=>e.cable);if((3===t.length||4===t.length)&&o.every(e=>"Power"===e.cableType&&1===e.count&&!e.multi)){t.forEach(e=>k.add(e.idx));const e=Math.max(...o.map(e=>e.OD)),l=o.reduce((e,t)=>e+t.weight,0),i=e/2,a=2*i*(3===o.length?1+2/Math.sqrt(3):Math.SQRT2+1),c=[];3===o.length?(c.push({x:-i,y:-i/Math.sqrt(3)}),c.push({x:i,y:-i/Math.sqrt(3)}),c.push({x:0,y:2/Math.sqrt(3)*i})):(c.push({x:-i,y:-i}),c.push({x:i,y:-i}),c.push({x:-i,y:i}),c.push({x:i,y:i})),w.push({tag:o.map(e=>e.tag).join("+"),cableType:"Power",count:o.length,size:o.map(e=>e.size).join("+"),rating:NaN,voltage:NaN,OD:a,weight:l,multi:!1,zone:n,circuitGroup:r,isGroup:!0,members:o,offsets:c,spacingGap:2.15*e})}else h+=`<p class="warning">Circuit Group ${r} in Zone ${n} must contain 3 or 4 single-conductor power cables.</p>`,t.forEach(e=>{w.push(e.cable),k.add(e.idx)})}),p.forEach((e,t)=>{k.has(t)||w.push(e)});const{large:C,small:F}=f(p);let A=v(F),q=x(C);const O=p.filter(e=>!e.multi);let I="";if(O.length>0){const r=v(O),o=function(e,t){return e>=E("4/0 AWG")?40:"ladder"===t?50:40}(Math.max(...O.map(e=>E(e.size))),n),l=r/(e*t)*100;l>o+1e-6&&(I=`\n              <p class="nfpaWarn">\n                NFPA 70 392.22(B) WARNING:<br>\n                Single-conductor fill (${l.toFixed(0)} %) exceeds ${o} % allowable.\n              </p>`),O.some(e=>1===e.count&&E(e.size)<E("1/0 AWG"))&&(I+='\n              <p class="nfpaWarn">\n                NFPA 70 392.10(B)(1)(a) WARNING:<br>\n                Single-conductor cables smaller than #1/0 are not permitted in ladder cable trays.\n              </p>')}let L=function(e,t,n){let r=0;if(e.length>0){const t=x(e);r="solid"===n?t/.9:t}const o=v(t);for(const e of m){if(e<r)continue;const l=b(e,n);if(0===t.length||o<=l)return e}return null}(C,F,n);const G=document.getElementById("largeSpacing").checked,B=[...new Set(w.map(e=>e.zone))].sort((e,t)=>e-t);let z=[],D=[],W="",N="",T=[];const M=[];let R=0;B.forEach(t=>{const n=w.filter(e=>e.zone===t),r=$(n,e,G),o=p.filter(e=>e.zone===t);M.push({zid:t,cables:n,orig:o,width:r.widthUsed}),R+=r.widthUsed;const l=o.map(e=>e.voltage).filter(e=>!isNaN(e)),i=o.map(e=>e.rating).filter(e=>!isNaN(e));if(l.length>0&&i.length>0){const e=Math.max(...l),n=Math.min(...i);e>n+1e-6&&(N+=`\n                <p class="warning">\n                  WARNING: In Zone ${t}, operating voltage (${e.toFixed(0)} V) exceeds the lowest cable rating (${n.toFixed(0)} V).\n                </p>`)}});const P=m.find(e=>e>=R)||null;(!L||P&&P>L)&&(L=P);let V=R>e?e/R:1;function U(e){let n=0,r="";const o=[],l=[],i=[];return M.forEach(a=>{const c=a.width*e,d=$(a.cables,c,G),s=d.widthUsed,{large:u,small:p}=f(a.orig);if(d.largeCount>0&&d.smallCount>0){const e=v(u),n=v(p),o=d.barrierX,l=s-d.barrierX,i=o>0?Math.min(100,e/(o*t)*100):0,c=l>0?Math.min(100,n/(l*t)*100):0;r+=`<p><strong>Zone ${a.zid}.1 Fill %:</strong> ${i.toFixed(0)} %</p>`,r+=`<p><strong>Zone ${a.zid}.2 Fill %:</strong> ${c.toFixed(0)} %</p>`}else{const e=v(a.orig),n=s>0?Math.min(100,e/(s*t)*100):0;r+=`<p><strong>Zone ${a.zid} Fill %:</strong> ${n.toFixed(0)} %</p>`}n>0&&o.push(n),d.largeCount>0&&d.smallCount>0?(o.push(n+d.barrierX),l.push(`${a.zid}.1`),l.push(`${a.zid}.2`)):l.push(`${a.zid}`),d.placed.forEach(e=>{e.x+=n,i.push(e)}),n+=s}),{placed:i,lines:o,names:l,width:n,html:r}}let X=U(V);for(let t=0;t<8&&X.width>e+1e-6;t++)V*=e/X.width,X=U(V);z=X.placed,D=X.lines,T=X.names,X.width,W=X.html;const _=p.every(e=>"Control"===e.cableType||"Signal"===e.cableType);let H="";if(!_){const t="ladder"===n?y[e]||0:g[e]||0;if(t>0){let r=t-("ladder"===n?1.2:1)*q;r<0&&(r=0),A>r+1e-6&&(H=`\n                <p class="nfpaWarn">\n                  NFPA 70 Table 392.22(A) WARNING:<br>\n                  Small‐cable area (${A.toFixed(2)} in²) exceeds NFPA allowable\n                  (${r.toFixed(2)} in²) for a ${e}" ${"ladder"===n?"Ladder":"Solid Bottom"} tray.\n                </p>`)}}let j="";const Z=A/(e*t)*100;_&&("ladder"===n&&Z>50?j=`\n              <p class="nfpaWarn">\n                NFPA 70 392.22(A)(2) WARNING:<br>\n                All cables are Control/Signal and Fill % (${Z.toFixed(0)} %) exceeds 50 % for Ladder tray.\n              </p>`:"solid"===n&&Z>40&&(j=`\n              <p class="nfpaWarn">\n                NFPA 70 392.22(A)(4) WARNING:<br>\n                All cables are Control/Signal and Fill % (${Z.toFixed(0)} %) exceeds 40 % for Solid Bottom tray.\n              </p>`));const J=p.reduce((e,t)=>e+t.weight,0);let K=`\n          <p>\n            <strong>Using Tray Width:</strong> ${e}"<br>\n            <strong>Tray Depth:</strong> ${t}"<br>\n            <strong>Type:</strong> ${"ladder"===n?"Ladder (50 % fill)":"Solid Bottom (40 % fill)"}\n          </p>\n\n          <p>\n            <strong>Stackable Cables Cross-Sectional Area:</strong>\n            ${A.toFixed(2)} in²\n          </p>\n          ${W}\n          <p>\n            <strong>Non-Stackable Cables Sum of Diameters:</strong>\n            ${q.toFixed(2)} in\n          </p>\n\n          <p>\n          <strong>Total Cable Weight:</strong> ${J.toFixed(2)} lbs/ft\n        </p>\n        ${H}\n        ${j}\n        ${I}\n        ${h}\n        ${N}\n      `;l=z,i=D,a=e,c=t,d=20,s=T.slice();let Q=!1,Y=!1;z.forEach(n=>{n.x+n.r>e+1e-6&&(Q=!0),n.y+n.r>t+1e-6&&(Y=!0)});const ee=d,te=t*ee,ne=e*ee,re=44;let oe=`\n          <svg\n            width="${ne}"\n            height="${44+te}"\n            style="background:#f9f9f9; border:1px solid #999;"\n          >\n        `;r&&(oe+=`\n            <text\n              x="${(ne/2).toFixed(2)}"\n              y="14"\n              font-size="16px"\n              text-anchor="middle"\n              fill="#000"\n              font-family="Arial, sans-serif"\n            >${r}</text>\n          `),D.forEach(e=>{const t=(e*ee).toFixed(2);oe+=`\n            <line\n              x1="${t}" y1="44"\n              x2="${t}" y2="${(re+te).toFixed(2)}"\n              stroke="#aa3300"\n              stroke-width="2"\n              stroke-dasharray="4 2"\n            />\n          `});const le=[0,...D,e];for(let e=0;e<le.length-1;e++){const t=le[e]*ee,n=le[e+1]*ee,r=(t+n)/2,o=(le[e+1]-le[e]).toFixed(1)+'"',l=T[e]?`Zone ${T[e]}`:"Zone Unknown";oe+=`\n            <line x1="${t.toFixed(2)}" y1="28" x2="${n.toFixed(2)}" y2="28" stroke="#000" stroke-width="1" />\n            <line x1="${t.toFixed(2)}" y1="24" x2="${t.toFixed(2)}" y2="32" stroke="#000" stroke-width="1" />\n            <line x1="${n.toFixed(2)}" y1="24" x2="${n.toFixed(2)}" y2="32" stroke="#000" stroke-width="1" />\n            <text x="${r.toFixed(2)}" y="22" font-size="10px" text-anchor="middle" font-family="Arial, sans-serif">${l}</text>\n            <text x="${r.toFixed(2)}" y="38" font-size="10px" text-anchor="middle" font-family="Arial, sans-serif">${o}</text>\n          `}if(oe+=`\n          <rect\n            x="0" y="44"\n            width="${(e*ee).toFixed(2)}"\n            height="${(t*ee).toFixed(2)}"\n            fill="none"\n            stroke="#333"\n            stroke-width="2"\n          />\n        `,z.forEach(e=>{if(e.isGroup&&e.members&&e.offsets){const n=e.x*ee,r=re+(t-e.y)*ee,o=e.r*ee;oe+=`\n              <circle\n                cx="${n.toFixed(2)}"\n                cy="${r.toFixed(2)}"\n                r="${o.toFixed(2)}"\n                fill="none"\n                stroke="#0066aa"\n                stroke-width="1"\n                stroke-dasharray="4 2"\n              />\n            `,e.members.forEach((n,r)=>{const o=(e.x+e.offsets[r].x)*ee,l=re+(t-(e.y+e.offsets[r].y))*ee,i=n.OD/2*ee;oe+=`\n                <circle\n                  cx="${o.toFixed(2)}"\n                  cy="${l.toFixed(2)}"\n                  r="${i.toFixed(2)}"\n                  fill="#66ccff"\n                  stroke="#0066aa"\n                  stroke-width="1"\n                >\n                  <title>\nCable Tag: ${n.tag}\nCable Type: ${n.cableType}\nConductors: ${n.count}\nSize: ${n.size}\nOD: ${n.OD.toFixed(2)}″\nWt: ${n.weight.toFixed(2)} lbs/ft\n                  </title>\n                </circle>\n              `})}else{const n=e.x*ee,r=re+(t-e.y)*ee,o=e.r*ee;oe+=`\n              <circle\n                cx="${n.toFixed(2)}"\n                cy="${r.toFixed(2)}"\n                r="${o.toFixed(2)}"\n                fill="#66ccff"\n                stroke="#0066aa"\n                stroke-width="1"\n              >\n                <title>\nCable Tag: ${e.tag}\nCable Type: ${e.cableType}\nConductors: ${e.count}\nSize: ${e.size}\nOD: ${e.OD.toFixed(2)}″\nWt: ${e.weight.toFixed(2)} lbs/ft\n                </title>\n              </circle>\n            `}}),oe+="</svg>",document.getElementById("svgContainer").innerHTML=oe,(Q||Y)&&(Q&&(K+=L&&L>e?`\n                <p class="warning">\n                  WARNING: Some cables extend beyond the tray width (${e}").\n                </p>\n                <p class="recommend">\n                  Recommend larger standard width: ${L}" \n                </p>`:`\n                <p class="warning">\n                  WARNING: Some cables extend beyond the tray width (${e}").\n                </p>\n                <p class="recommend">\n                  No larger standard width can accommodate all cables.\n                </p>`),Y)){const e=Math.max(...z.map(e=>e.y+e.r));K+=`\n              <p class="warning">\n                WARNING: Some cables extend above the tray depth (${t}").\n              </p>\n              <p class="recommend">\n                Recommend increasing tray depth to at least ${e.toFixed(2)}".\n              </p>`}document.getElementById("results").innerHTML=K}),document.getElementById("expandBtn").addEventListener("click",()=>{if(!l)return void alert("Please click “Draw Tray” first, then Expand.");const e=160,t=a,n=c,r=document.getElementById("trayName").value.trim(),o=n*e,d=t*e,u=76;let p=`\n          <svg\n            width="${d}"\n            height="${76+o}"\n            style="background:#f9f9f9; border:1px solid #333;"\n          >\n        `;r&&(p+=`\n            <text\n              x="${(d/2).toFixed(2)}"\n              y="24"\n              font-size="24px"\n              text-anchor="middle"\n              fill="#000"\n              font-family="Arial, sans-serif"\n            >${r}</text>\n          `),i.forEach(t=>{const n=(t*e).toFixed(2);p+=`\n            <line\n              x1="${n}" y1="76"\n              x2="${n}" y2="${(u+o).toFixed(2)}"\n              stroke="#aa3300"\n              stroke-width="4"\n              stroke-dasharray="12 6"\n            />\n          `});const h=[0,...i,t];for(let t=0;t<h.length-1;t++){const n=h[t]*e,r=h[t+1]*e,o=(n+r)/2,l=(h[t+1]-h[t]).toFixed(1)+'"',i=s[t]?`Zone ${s[t]}`:"Zone Unknown";p+=`\n            <line x1="${n.toFixed(2)}" y1="52" x2="${r.toFixed(2)}" y2="52" stroke="#000" stroke-width="2" />\n            <line x1="${n.toFixed(2)}" y1="44" x2="${n.toFixed(2)}" y2="60" stroke="#000" stroke-width="2" />\n            <line x1="${r.toFixed(2)}" y1="44" x2="${r.toFixed(2)}" y2="60" stroke="#000" stroke-width="2" />\n            <text x="${o.toFixed(2)}" y="40" font-size="18px" text-anchor="middle" font-family="Arial, sans-serif">${i}</text>\n            <text x="${o.toFixed(2)}" y="68" font-size="18px" text-anchor="middle" font-family="Arial, sans-serif">${l}</text>\n          `}p+=`\n          <rect\n            x="0" y="76"\n            width="${(t*e).toFixed(2)}"\n            height="${(n*e).toFixed(2)}"\n            fill="none"\n            stroke="#333"\n            stroke-width="4"\n          />\n        `,l.forEach(t=>{if(t.isGroup&&t.members&&t.offsets){const r=t.x*e,o=u+(n-t.y)*e,l=t.r*e;p+=`\n              <circle\n                cx="${r.toFixed(2)}"\n                cy="${o.toFixed(2)}"\n                r="${l.toFixed(2)}"\n                fill="none"\n                stroke="#0066aa"\n                stroke-width="2"\n                stroke-dasharray="8 4"\n              />\n            `,t.members.forEach((r,o)=>{const l=(t.x+t.offsets[o].x)*e,i=u+(n-(t.y+t.offsets[o].y))*e,a=r.OD/2*e;p+=`\n                <circle\n                  cx="${l.toFixed(2)}"\n                  cy="${i.toFixed(2)}"\n                  r="${a.toFixed(2)}"\n                  fill="#66ccff"\n                  stroke="#0066aa"\n                  stroke-width="2"\n                >\n                  <title>\nCable Tag: ${r.tag}\nCable Type: ${r.cableType}\nConductors: ${r.count}\nSize: ${r.size}\nOD: ${r.OD.toFixed(2)}″\nWt: ${r.weight.toFixed(2)} lbs/ft\n                  </title>\n                </circle>\n              `;const c=Math.min(.15*a,20),d=[`${r.tag}`,`${r.cableType}`,`${r.count}C ${r.size}`,`OD: ${r.OD.toFixed(2)}″`,`Wt: ${r.weight.toFixed(2)}`],s=1.1*c;let h=i-d.length*s/2+s/2;d.forEach((e,t)=>{p+=`\n                  <text\n                    x="${l.toFixed(2)}"\n                    y="${(h+t*s).toFixed(2)}"\n                    font-size="${c}px"\n                    text-anchor="middle"\n                    fill="#000"\n                    stroke="none"\n                    font-family="Arial, sans-serif"\n                    pointer-events="none"\n                  >\n                    ${e}\n                  </text>\n                `})})}else{const r=t.x*e,o=u+(n-t.y)*e,l=t.r*e;p+=`\n              <circle\n                cx="${r.toFixed(2)}"\n                cy="${o.toFixed(2)}"\n                r="${l.toFixed(2)}"\n                fill="#66ccff"\n                stroke="#0066aa"\n                stroke-width="2"\n              />\n            `;const i=Math.min(.15*l,20),a=[`${t.tag}`,`${t.cableType}`,`${t.count}C ${t.size}`,`OD: ${t.OD.toFixed(2)}″`,`Wt: ${t.weight.toFixed(2)}`],c=1.1*i;let d=o-a.length*c/2+c/2;a.forEach((e,t)=>{p+=`\n                <text\n                  x="${r.toFixed(2)}"\n                  y="${(d+t*c).toFixed(2)}"\n                  font-size="${i}px"\n                  text-anchor="middle"\n                  fill="#000"\n                  stroke="none"\n                  font-family="Arial, sans-serif"\n                  pointer-events="none"\n                >\n                  ${e}\n                </text>\n              `})}}),p+="</svg>",document.getElementById("expandedSVG").innerHTML=p,document.getElementById("overlay").style.display="flex"}),document.getElementById("copyBtn").addEventListener("click",()=>{const e=document.getElementById("expandedSVG").querySelector("svg");if(!e)return void alert("No expanded SVG found to copy.");const t=e.outerHTML;navigator.clipboard.writeText(t).then(()=>{alert("SVG markup copied to clipboard!")}).catch(e=>{alert("Error copying SVG: "+e)})}),document.getElementById("printBtn").addEventListener("click",()=>{const e=document.getElementById("expandedSVG").querySelector("svg");if(!e)return void alert("No expanded SVG found to print.");const t=e.outerHTML,n=window.open("","_blank");n.document.write(`<!DOCTYPE html>\n<html>\n<head>\n  <title>Print Cable Tray</title>\n</head>\n<body style="margin:0; padding:0;">\n  ${t}\n</body>\n</html>`),n.document.close(),n.focus(),setTimeout(()=>{n.print()},200)}),document.getElementById("copyPngBtn").addEventListener("click",()=>{const e=document.getElementById("expandedSVG").querySelector("svg");if(!e)return void alert("No expanded SVG found to copy as PNG.");const t=(new XMLSerializer).serializeToString(e),n=new Blob([t],{type:"image/svg+xml;charset=utf-8"}),r=URL.createObjectURL(n),o=new Image;o.onload=()=>{const t=document.createElement("canvas");t.width=e.getAttribute("width"),t.height=e.getAttribute("height");const n=t.getContext("2d");n.fillStyle="#ffffff",n.fillRect(0,0,t.width,t.height),n.drawImage(o,0,0),t.toBlob(e=>{if(!e)return alert("Failed to create PNG blob."),void URL.revokeObjectURL(r);const t=new ClipboardItem({"image/png":e});navigator.clipboard.write([t]).then(()=>{alert("PNG copied to clipboard!"),URL.revokeObjectURL(r)}).catch(e=>{alert("Error copying PNG: "+e),URL.revokeObjectURL(r)})},"image/png")},o.onerror=()=>{alert("Failed to load SVG into image for PNG conversion."),URL.revokeObjectURL(r)},o.src=r}),document.getElementById("popupClose").addEventListener("click",()=>{document.getElementById("overlay").style.display="none"}),document.getElementById("exportExcelBtn").addEventListener("click",()=>{const e=Array.from(u.querySelectorAll("tr"));if(0===e.length)return void alert("No cables to export.");const t=[["Tag","Cable Type","Conductors","Conductor Size","Cable Rating (V)","Operating Voltage (V)","OD","Weight","Zone","Circuit Group"]];e.forEach(e=>{const n=e.children[0].querySelector("input").value.trim(),r=e.children[1].querySelector("select").value,o=e.children[2].querySelector("input").value.trim(),l=e.children[3].querySelector("input").value.trim(),i=e.children[4].querySelector("input").value.trim(),a=e.children[5].querySelector("input").value.trim(),c=e.children[6].querySelector("input").value.trim(),d=e.children[7].querySelector("input").value.trim(),s=e.children[8].querySelector("input").value.trim(),u=e.children[9].querySelector("input").value.trim();t.push([n,r,o,l,i,a,c,d,s,u])});const n=XLSX.utils.book_new(),r=XLSX.utils.aoa_to_sheet(t);XLSX.utils.book_append_sheet(n,r,"Cables"),XLSX.writeFile(n,"CableList.xlsx")}),document.getElementById("importExcelBtn").addEventListener("click",()=>{document.getElementById("importExcelInput").click()}),document.getElementById("importExcelInput").addEventListener("change",e=>{const t=e.target.files[0];if(!t)return;const n=new FileReader;n.onload=e=>{const t=e.target.result,n=XLSX.read(t,{type:"binary"}),o=n.Sheets[n.SheetNames[0]],l=XLSX.utils.sheet_to_json(o,{defval:""});0!==l.length?(u.innerHTML="",l.forEach((e,t)=>{const{Tag:n,"Cable Type":o,Conductors:l,"Conductor Size":i,"Cable Rating (V)":a,"Operating Voltage (V)":c,OD:d,Weight:s,Zone:h,"Circuit Group":m}=e;if(void 0===n||void 0===o||void 0===l||void 0===i||void 0===a||void 0===c||void 0===d||void 0===s)return void alert(`Row ${t+2} missing one of: Tag, Cable Type, Conductors, Conductor Size, Cable Rating (V), Operating Voltage (V), OD, Weight.`);const y=p();y.children[0].querySelector("input").value=n,y.children[1].querySelector("select").value=o,y.children[2].querySelector("input").value=l,y.children[3].querySelector("input").value=i,y.children[4].querySelector("input").value=a,y.children[5].querySelector("input").value=c;y.children[3].querySelector("input").dispatchEvent(new Event("input"));const g=y.children[6].querySelector("input"),f=y.children[7].querySelector("input"),x=y.children[8].querySelector("input"),v=y.children[9].querySelector("input");r.findIndex(e=>e.conductors===parseInt(l)&&e.size===i)<0&&(g.value=parseFloat(d).toFixed(2),f.value=parseFloat(s).toFixed(2),g.readOnly=!1,f.readOnly=!1),x.value=h||1,v.value=e["Circuit Group"]||"",u.appendChild(y)}),alert("Excel imported. Correct any unrecognized conductor details if needed."),document.getElementById("importExcelInput").value=""):alert("Excel sheet is empty.")},n.readAsBinaryString(t)}),document.getElementById("importHelpBtn").addEventListener("click",()=>{alert("Import Instructions:\n1. Click 'Export Excel' to download a template.\n2. Fill in Tag, Cable Type, Conductors, Conductor Size, Cable Rating (V), Operating Voltage (V), OD, Weight, Zone, and Circuit Group.\n3. Save the file then choose it with 'Import Excel'.")});const k=document.getElementById("profileList");function C(){k.innerHTML="";const e=Object.keys(localStorage).filter(e=>e.startsWith("trayProfile_"));if(0===e.length){const e=document.createElement("option");return e.value="",e.textContent="-- no profiles saved --",void k.appendChild(e)}const t=document.createElement("option");t.value="",t.textContent="-- select profile --",k.appendChild(t),e.sort(),e.forEach(e=>{const t=e.replace("trayProfile_",""),n=document.createElement("option");n.value=t,n.textContent=t,k.appendChild(n)})}document.getElementById("saveProfileBtn").addEventListener("click",()=>{const e=prompt("Enter a name for this cable profile:");if(!e)return;const t=Array.from(u.querySelectorAll("tr")),n=[];for(const e of t){const t=e.children[0].querySelector("input").value.trim(),r=e.children[1].querySelector("select").value,o=parseInt(e.children[2].querySelector("input").value),l=e.children[3].querySelector("input").value.trim(),i=parseFloat(e.children[4].querySelector("input").value),a=parseFloat(e.children[5].querySelector("input").value),c=parseFloat(e.children[6].querySelector("input").value),d=parseFloat(e.children[7].querySelector("input").value),s=parseInt(e.children[8].querySelector("input").value)||1,u=e.children[9].querySelector("input").value,p=u?parseInt(u):null,h=o>1;if(!t||!r||!o||!l||isNaN(c)||isNaN(d))return void alert("All rows must have Tag, Cable Type, conductor count/size, OD, and Weight before saving.");n.push({tag:t,cableType:r,count:o,size:l,rating:i,voltage:a,OD:c,weight:d,multi:h,zone:s,circuitGroup:p})}try{localStorage.setItem("trayProfile_"+e,JSON.stringify(n)),alert(`Profile "${e}" saved.`),C()}catch(e){alert("Error saving profile: "+e.message)}}),document.getElementById("loadProfileBtn").addEventListener("click",()=>{const e=k.value;if(!e)return void alert("Select a profile to load.");const t=localStorage.getItem("trayProfile_"+e);if(!t)return alert(`Profile "${e}" not found.`),void C();let n;try{n=JSON.parse(t)}catch(e){return void alert("Error parsing profile data: "+e.message)}u.innerHTML="",n.forEach(e=>{const t=p();t.children[0].querySelector("input").value=e.tag,t.children[1].querySelector("select").value=e.cableType,t.children[2].querySelector("input").value=e.count,t.children[3].querySelector("input").value=e.size,t.children[4].querySelector("input").value=e.rating||"",t.children[5].querySelector("input").value=e.voltage||"";t.children[3].querySelector("input").dispatchEvent(new Event("input"));const n=t.children[6].querySelector("input"),o=t.children[7].querySelector("input"),l=t.children[8].querySelector("input"),i=t.children[9].querySelector("input");r.findIndex(t=>t.conductors===e.count&&t.size===e.size)<0&&(n.value=e.OD.toFixed(2),o.value=e.weight.toFixed(2),n.readOnly=!1,o.readOnly=!1),l.value=e.zone||1,i.value=e.circuitGroup||"",u.appendChild(t)}),alert(`Profile "${e}" loaded.`)}),document.getElementById("deleteProfileBtn").addEventListener("click",()=>{const e=k.value;e?confirm(`Delete profile "${e}"?`)&&(localStorage.removeItem("trayProfile_"+e),alert(`Profile "${e}" deleted.`),C()):alert("Select a profile to delete.")}),C(),["trayWidth","trayDepth","trayType","trayName","largeSpacing"].forEach(e=>{const t=document.getElementById(e);t&&(t.addEventListener("input",n),t.addEventListener("change",n))});const F=document.getElementById("cableTable");F&&(F.addEventListener("input",n),F.addEventListener("click",e=>{"BUTTON"===e.target.tagName&&n()}));const A=document.getElementById("addCableBtn");A&&A.addEventListener("click",n);const q=document.getElementById("importExcelInput");q&&q.addEventListener("change",n),["saveProfileBtn","loadProfileBtn","exportExcelBtn"].forEach(e=>{const n=document.getElementById(e);n&&n.addEventListener("click",t)});const O=localStorage.getItem("trayFillData");if(O){try{const{tray:e,cables:t}=JSON.parse(O);document.getElementById("trayWidth").value=e.width,document.getElementById("trayDepth").value=e.height,document.getElementById("trayName").value=e.tray_id||"",u.innerHTML="",Array.isArray(t)&&t.forEach(e=>{const t=p();t.children[0].querySelector("input").value=e.name||e.tag||"",t.children[1].querySelector("select").value=e.cable_type||"",t.children[2].querySelector("input").value=e.conductors||e.count||1;const n=t.children[3].querySelector("input");n.value=e.conductor_size||e.size||"",t.children[4].querySelector("input").value=e.rating||"",t.children[5].querySelector("input").value=e.voltage||"",n.dispatchEvent(new Event("input"));const o=t.children[6].querySelector("input"),l=t.children[7].querySelector("input");r.findIndex(e=>e.conductors===parseInt(t.children[2].querySelector("input").value)&&e.size===n.value)<0&&(o.value=(e.diameter||e.OD||0).toFixed(2),l.value=(e.weight||0).toFixed(2),o.readOnly=!1,l.readOnly=!1),u.appendChild(t)}),document.getElementById("drawBtn").click()}catch(e){console.error("Failed to load trayFillData",e)}localStorage.removeItem("trayFillData")}document.querySelectorAll(".helpBtn").forEach(e=>{e.addEventListener("click",()=>{alert(e.getAttribute("data-help"))})})})}();
