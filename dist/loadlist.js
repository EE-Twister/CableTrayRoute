!function(){"use strict";function t(t){if("string"==typeof t)try{return e(JSON.parse(t))}catch{return function(t){const e=[],n=[],r=/#\d+=IFC([^;]*?)SEGMENT[^;]*?IFCPOLYLINE\(\(([^)]+)\),\(([^)]+)\)\)/gi;let a,o=0;for(;a=r.exec(t);){const t=a[1]||"",r=a[2].split(",").map(t=>parseFloat(t)),s=a[3].split(",").map(t=>parseFloat(t)),c={id:"SEG-"+o++,start_x:r[0],start_y:r[1],start_z:r[2],end_x:s[0],end_y:s[1],end_z:s[2]};/CABLECARRIER/i.test(t)?e.push(c):n.push(c)}return{trays:e,conduits:n}}(t)}return e(t)}function e(t){if(!t||"object"!=typeof t)return{trays:[],conduits:[]};const e=[],n=[],o=t.trays||t.Trays||t.cableTrays||t.CableTrays||[];for(const t of o)e.push(r(t));const s=t.conduits||t.Conduits||t.cableConduits||t.ConduitSegments||[];for(const t of s)n.push(a(t));return{trays:e,conduits:n}}function n(t){const e=parseFloat(t);return Number.isFinite(e)?e:void 0}function r(t={}){return{id:t.id||t.tag||t.tray_id||t.TrayID||t.name||t.Tag||"",start_x:n(t.start_x??t.sx??t.x1??t.StartX??t.start?.x),start_y:n(t.start_y??t.sy??t.y1??t.StartY??t.start?.y),start_z:n(t.start_z??t.sz??t.z1??t.StartZ??t.start?.z),end_x:n(t.end_x??t.ex??t.x2??t.EndX??t.end?.x),end_y:n(t.end_y??t.ey??t.y2??t.EndY??t.end?.y),end_z:n(t.end_z??t.ez??t.z2??t.EndZ??t.end?.z),width:n(t.width??t.w??t.Width??t.size_x),height:n(t.height??t.h??t.Height??t.size_y)}}function a(t={}){return{conduit_id:t.conduit_id||t.id||t.tag||t.ConduitID||"",type:t.type||t.conduit_type||t.Type||"",trade_size:t.trade_size||t.tradeSize||t.size||t.TradeSize||"",start_x:n(t.start_x??t.sx??t.x1??t.start?.x),start_y:n(t.start_y??t.sy??t.y1??t.start?.y),start_z:n(t.start_z??t.sz??t.z1??t.start?.z),end_x:n(t.end_x??t.ex??t.x2??t.end?.x),end_y:n(t.end_y??t.ey??t.y2??t.end?.y),end_z:n(t.end_z??t.ez??t.z2??t.end?.z),capacity:n(t.capacity??t.fill)}}const o={trays:"traySchedule",cables:"cableSchedule",ductbanks:"ductbankSchedule",conduits:"conduitSchedule",panels:"panelSchedule",loads:"loadList",traySchedule:"traySchedule",cableSchedule:"cableSchedule",ductbankSchedule:"ductbankSchedule",conduitSchedule:"conduitSchedule",panelSchedule:"panelSchedule",loadList:"loadList"},s={};function c(t,e){(s[t]||[]).forEach(t=>{try{t(e)}catch(t){console.error(t)}})}function i(t,e){try{const n="undefined"!=typeof localStorage?localStorage.getItem(t):null;return n?JSON.parse(n):e}catch{return e}}function d(t,e){try{"undefined"!=typeof localStorage&&localStorage.setItem(t,JSON.stringify(e)),c(t,e)}catch(e){console.error("Failed to store",t,e)}}const l=()=>i(o.trays,[]),u=t=>d(o.trays,t),y=()=>i(o.cables,[]),p=t=>d(o.cables,t),m=()=>i(o.ductbanks,[]),f=t=>d(o.ductbanks,t),g=()=>i(o.conduits,[]),h=t=>d(o.conduits,t),v=()=>i(o.panels,[]),b=t=>d(o.panels,t),S=()=>i(o.loads,[]);function _(t){return{tag:"",description:"",quantity:"",voltage:"",loadType:"",power:"",powerFactor:"",demandFactor:"",phases:"",circuit:"",...t}}const w=t=>d(o.loads,t.map(_)),x=t=>{const e=S();e.push(_(t)),w(e)},E=(t,e)=>{const n=S();t>=0&&t<n.length&&(n[t]=_({...n[t],...e}),w(n))},A=t=>{const e=S();t>=0&&t<e.length&&(e.splice(t,1),w(e))},k=(t,e=null)=>i(t,e),L=(t,e)=>d(t,e),z=t=>{try{"undefined"!=typeof localStorage&&localStorage.removeItem(t),c(t,null)}catch(e){console.error("Failed to remove",t,e)}},C=()=>{try{if("undefined"!=typeof localStorage)return Object.keys(localStorage)}catch{}return[]};"undefined"!=typeof window&&(window.dataStore={STORAGE_KEYS:o,getTrays:l,setTrays:u,getCables:y,setCables:p,getDuctbanks:m,setDuctbanks:f,getConduits:g,setConduits:h,getPanels:v,setPanels:b,getLoads:S,setLoads:w,addLoad:x,updateLoad:E,removeLoad:A,getItem:k,setItem:L,removeItem:z,on:function(t,e){s[t]||(s[t]=[]),s[t].push(e)},off:function(t,e){const n=s[t];if(!n)return;const r=n.indexOf(e);r>=0&&n.splice(r,1)},keys:C,exportProject:function(){const t={ductbanks:m(),conduits:g(),trays:l(),cables:y(),panels:v(),loads:S(),settings:{}},e=new Set([...Object.values(o),"CTR_PROJECT_V1"]);for(const n of C())e.has(n)||(t.settings[n]=k(n));return t},importProject:function(t){let e=t;const{valid:n,missing:r,extra:a}=function(t){const e=["ductbanks","conduits","trays","cables","panels","loads","settings"],n=[],r=[];if(!t||"object"!=typeof t)return n.push(...e),{valid:!1,missing:n,extra:r};for(const r of e)r in t||n.push(r);for(const n of Object.keys(t))e.includes(n)||r.push(n);const a=Array.isArray(t.ductbanks)&&Array.isArray(t.conduits)&&Array.isArray(t.trays)&&Array.isArray(t.cables)&&Array.isArray(t.panels)&&Array.isArray(t.loads)&&t.settings&&"object"==typeof t.settings&&!Array.isArray(t.settings);return{valid:0===n.length&&0===r.length&&a,missing:n,extra:r}}(e);if(!n){const n=[];r.length&&n.push(`Missing fields: ${r.join(", ")}`),a.length&&n.push(`Extra fields: ${a.join(", ")}`);const o=n.join("\n")||"Invalid project data.";if("undefined"==typeof window||"function"!=typeof window.confirm||!window.confirm(`${o}\nRepair & continue?`))return!1;e={ductbanks:Array.isArray(t.ductbanks)?t.ductbanks:[],conduits:Array.isArray(t.conduits)?t.conduits:[],trays:Array.isArray(t.trays)?t.trays:[],cables:Array.isArray(t.cables)?t.cables:[],panels:Array.isArray(t.panels)?t.panels:[],loads:Array.isArray(t.loads)?t.loads:[],settings:t.settings&&"object"==typeof t.settings?t.settings:{}}}f(e.ductbanks),h(e.conduits),u(e.trays),p(e.cables),b(Array.isArray(e.panels)?e.panels:[]),w(Array.isArray(e.loads)?e.loads:[]);const s=new Set([...Object.values(o),"CTR_PROJECT_V1"]);for(const t of C())s.has(t)||e.settings&&t in e.settings||z(t);if(e.settings)for(const[t,n]of Object.entries(e.settings))L(t,n);return!0},importFromCad:async function(e){let n;if("string"==typeof e)n=e;else{if(!e||"function"!=typeof e.text)throw new Error("Unsupported CAD file");n=await e.text()}const{trays:r=[],conduits:a=[]}=t(n);return Array.isArray(r)&&r.length&&u(r),Array.isArray(a)&&a.length&&h(a),{trays:r,conduits:a}},exportToCad:function(t="json"){const e={trays:l(),conduits:g()};let n="application/json",r="json",a=JSON.stringify(e,null,2);if("csv"===t){const t="id,start_x,start_y,start_z,end_x,end_y,end_z,width,height",o=e.trays.map(t=>[t.id,t.start_x,t.start_y,t.start_z,t.end_x,t.end_y,t.end_z,t.width,t.height].join(",")),s="conduit_id,type,trade_size,start_x,start_y,start_z,end_x,end_y,end_z,capacity",c=e.conduits.map(t=>[t.conduit_id,t.type,t.trade_size,t.start_x,t.start_y,t.start_z,t.end_x,t.end_y,t.end_z,t.capacity].join(","));a=`# trays\n${[t,...o].join("\n")}\n# conduits\n${[s,...c].join("\n")}`,n="text/csv",r="csv"}if("undefined"!=typeof document)try{const t=new Blob([a],{type:n}),e=document.createElement("a");e.href=URL.createObjectURL(t),e.download=`raceways.${r}`,document.body.appendChild(e),e.click(),document.body.removeChild(e),URL.revokeObjectURL(e.href)}catch(t){console.error("Failed to export CAD data",t)}return a}}),window.addEventListener("DOMContentLoaded",()=>{initSettings(),initDarkMode(),initCompactMode(),initNavToggle();const t=document.querySelector("#load-table tbody"),e=document.getElementById("add-row-btn"),n=document.getElementById("delete-selected-btn"),r=document.getElementById("select-all");function a(t,e){const n=document.createElement("tr");n.dataset.index=e,n.innerHTML=`\n      <td><input type="checkbox" class="row-select" aria-label="Select row"></td>\n      <td><input name="tag" type="text" value="${t.tag||""}"></td>\n      <td><input name="description" type="text" value="${t.description||""}"></td>\n      <td><input name="quantity" type="number" step="any" value="${t.quantity||""}"></td>\n      <td><input name="voltage" type="number" step="any" value="${t.voltage||""}"></td>\n      <td><input name="loadType" type="text" value="${t.loadType||""}"></td>\n      <td><input name="power" type="number" step="any" value="${t.power||""}"></td>\n      <td><input name="powerFactor" type="number" step="any" value="${t.powerFactor||""}"></td>\n      <td><input name="demandFactor" type="number" step="any" value="${t.demandFactor||""}"></td>\n      <td><input name="phases" type="text" value="${t.phases||""}"></td>\n      <td><input name="circuit" type="text" value="${t.circuit||""}"></td>`,Array.from(n.querySelectorAll('input[type="text"],input[type="number"]')).forEach(t=>{const e=t.parentElement;t.addEventListener("blur",()=>function(t){const e=Number(t.dataset.index);E(e,function(t){return{tag:t.querySelector('input[name="tag"]').value.trim(),description:t.querySelector('input[name="description"]').value.trim(),quantity:t.querySelector('input[name="quantity"]').value.trim(),voltage:t.querySelector('input[name="voltage"]').value.trim(),loadType:t.querySelector('input[name="loadType"]').value.trim(),power:t.querySelector('input[name="power"]').value.trim(),powerFactor:t.querySelector('input[name="powerFactor"]').value.trim(),demandFactor:t.querySelector('input[name="demandFactor"]').value.trim(),phases:t.querySelector('input[name="phases"]').value.trim(),circuit:t.querySelector('input[name="circuit"]').value.trim()}}(t))}(n)),t.addEventListener("keydown",t=>function(t,e){if("ArrowLeft"===t.key||"ArrowRight"===t.key){let n=!0;if("INPUT"===t.target.tagName||"TEXTAREA"===t.target.tagName){const e=t.target.selectionStart??0,r=t.target.selectionEnd??0,a=(t.target.value||"").length;n=0===e&&r===a}if(n){t.preventDefault();const n="ArrowLeft"===t.key?e.previousElementSibling:e.nextElementSibling;if(n){const t=n.querySelector("input,select,textarea");t&&(t.focus(),"function"==typeof t.select&&t.select())}}}else if("Enter"===t.key){t.preventDefault();const n=e.cellIndex,r=e.parentElement.nextElementSibling;if(r&&r.cells[n]){const t=r.cells[n].querySelector("input,select,textarea");t&&(t.focus(),"function"==typeof t.select&&t.select())}}}(t,e))});const a=n.querySelector(".row-select");return a.addEventListener("change",()=>{a.checked||(r.checked=!1)}),n}function o(){t.innerHTML="";S().forEach((e,n)=>t.appendChild(a(e,n))),r.checked=!1}function s(t,e=","){return[["tag","description","quantity","voltage","loadType","power","powerFactor","demandFactor","phases","circuit"].join(e),...t.map(t=>[t.tag,t.description,t.quantity,t.voltage,t.loadType,t.power,t.powerFactor,t.demandFactor,t.phases,t.circuit].map(t=>(t=String(t??"").replace(/"/g,'""')).includes(e)?`"${t}"`:t).join(e))].join("\n")}e.addEventListener("click",()=>{x({tag:"",description:"",quantity:"",voltage:"",loadType:"",power:"",powerFactor:"",demandFactor:"",phases:"",circuit:""}),o();const e=t.lastElementChild;if(e){const t=e.querySelector('input[name="description"]');t&&t.focus()}}),n.addEventListener("click",()=>{const e=Array.from(t.querySelectorAll("tr")).filter(t=>t.querySelector(".row-select").checked);if(!e.length)return;if(!confirm("Delete selected loads?"))return;const n=e.map(t=>Number(t.dataset.index)),r=S().filter((t,e)=>!n.includes(e));w(r),o()}),r.addEventListener("change",e=>{const n=e.target.checked;t.querySelectorAll(".row-select").forEach(t=>{t.checked=n})}),document.getElementById("search").addEventListener("input",e=>{const n=e.target.value.toLowerCase();Array.from(t.rows).forEach(t=>{const e=Array.from(t.querySelectorAll('input[type="text"],input[type="number"]')).some(t=>t.value.toLowerCase().includes(n));t.style.display=e?"":"none"})}),document.getElementById("export-btn").addEventListener("click",()=>{const t=S(),e=new Blob([JSON.stringify(t,null,2)],{type:"application/json"}),n=document.createElement("a");n.href=URL.createObjectURL(e),n.download="loads.json",n.click(),URL.revokeObjectURL(n.href)}),document.getElementById("export-csv-btn").addEventListener("click",()=>{const t=s(S()),e=new Blob([t],{type:"text/csv"}),n=document.createElement("a");n.href=URL.createObjectURL(e),n.download="loads.csv",n.click(),URL.revokeObjectURL(n.href)}),document.getElementById("copy-btn").addEventListener("click",()=>{const t=s(S(),"\t");navigator.clipboard.writeText(t).catch(()=>{alert("Copy failed")})});const c=document.getElementById("import-input");document.getElementById("import-btn").addEventListener("click",()=>c.click()),c.addEventListener("change",t=>{const e=t.target.files[0];e&&(e.text().then(t=>{try{const e=JSON.parse(t);Array.isArray(e)?(w(e),o()):alert("Invalid load data")}catch{alert("Invalid load data")}}),t.target.value="")});const i=document.getElementById("import-csv-input");document.getElementById("import-csv-btn").addEventListener("click",()=>i.click()),i.addEventListener("change",t=>{const e=t.target.files[0];e&&(e.text().then(t=>{try{const e=function(t,e=","){const n=t.trim().split(/\r?\n/);if(!n.length)return[];const r=n[0].toLowerCase();return r.includes("description")&&r.includes("power")&&n.shift(),n.map(t=>{const n=t.split(e).map(t=>t.replace(/^"|"$/g,"").replace(/""/g,'"').trim());if(10!==n.length)throw new Error("Invalid CSV format");const[r,a,o,s,c,i,d,l,u,y]=n;if([o,s,i,d,l].some(t=>t&&isNaN(Number(t))))throw new Error("Invalid CSV data");return{tag:r,description:a,quantity:o,voltage:s,loadType:c,power:i,powerFactor:d,demandFactor:l,phases:u,circuit:y}})}(t);w(e),o()}catch{alert("Invalid CSV load data")}}),t.target.value="")}),o()})}();
